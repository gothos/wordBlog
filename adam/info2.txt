else{
                                    $.fn.buildDummyNotifC(1,1,k,par,0,1)
                                }
    
    
    
    if ( b < a ){
                            
                            $('#SCButton'+add+id+'').attr('value','Comments ('+numOfComments+')');
                            
                        }else{
                            $('#SCButton'+add+id+'').attr('value','Comments');
                            
                            
                            
                        }
                        
                        

var a = numOfComments
                        var b = $.fn.countNumOfComments(flag,id);
                        
                        
$('#SCButton'+add+id+'').css('display','inline');
                    $('#SCButton'+add+id+'').attr('value','Comments');
                    
                    

if ( b < a ){
                            
                            $('#SCButton'+add+id+'').attr('value','Comments ('+numOfComments+')');
                            
                        }else{
                            $('#SCButton'+add+id+'').attr('value','Comments');
                            
                            
                            
                        };


var a = numOfComments
                        var b = $.fn.countNumOfComments(flag,id);


if ((flag == 1 && numOfComments > 2) || (flag == 2 && numOfComments > 0 )){
            addon = addon + "<input type='button' class='button gray' style='display: inline;' id='SCButton"+add+id+"' value='Comments ("+numOfComments+")'>";
        }else{
            addon = addon + "<input type='button' class='button gray' style='display: inline;' id='SCButton"+add+id+"' value='Comments'>";
        }
        
        var d = parseInt($('#SCButtonPost'+k+'').attr('value').match(/\(([0-9 ]+)\)/)[1])



if ((sign == 1 && $('#SCButton'+add+id+'').attr('value') != 'Comments') || (sign == 2) ){
                        $('#SCButton'+add+id+'').attr('value','Comments ('+numOfComments+')');
                            
                        }
    
    beforeSend:function(){$(window).scroll(function() {
                alert('canceled');
                return false})},


beforeSend: function (xhr){ 
                xhr.setRequestHeader("Content-Encoding","gzip");

$.fn.checkForChangesC();














 $.fn.giveMeLastCID = function(flag,id,sign){
    
     
    
        if (flag == 1){
            var add = 'Post';
            
            
            }
        else{
            var add = 'Comment';
            
        }
        
        
        
        var L = []
        if ($.fn.countNumOfComments(flag,id) > 0){
            
            var lastCID = Math.min.apply(Math,function(){
                var L = []
                $.each($('#firstCDiv'+add+id+'').children(),function(index,value){
                    if ($(this).is('[id^=comment]')){
                        L.push($(this).attr('id').match(/[0-9 ]+/))
                    }
                })
                return L;
            });
 
        }
         
        else{
            var lastCID = 0
        }
        
                
        
        
        if (sign == 1){
            $('#SCFromInput'+add+id+'').attr('value',lastCID)
        }else{
            $('#CFromDisp'+add+id+'').attr('value',lastCID )
        }

  
    
    
     
    }
    
    
    
    
        $.fn.giveMeLastID = function(sign){
        
        if ($.fn.countPosts() > 0){

            var oldestPostId = Math.min.apply(Math,function(){
                var L = []
                $.each($('#content').children(),function(index,value){
                    if ($(this).is('[id^=post]')){
                        L.push($(this).attr('id').match(/[0-9 ]+/))
                    }
                })
                alert(L)
                return L
            });
            
        }
         
        else{
            var oldestPostId = 0
        }
        
        
        if (sign == 1){
            $('#postsFrom').attr('value',oldestPostId)
            
        }else{
            $('#oldestPostId').attr('value',oldestPostId)
        }

        
    }
    
    
    
    $.fn.getPostIDs = function(){
            var m = []
            $.each($('#content').children(),function(){
            
                if ($(this).is('[id^=post]')){
                    m.push($(this).attr('id').match(/[0-9 ]+/))
                }
                
            })
            
            return m
        }
        


if (children[i].attr('[id^=post]')){
                    m.push(children[i].attr('id').match(/[0-9 ]+/))    
                }
    
    $.fn.saveDisplayedIDsC1L = function(){
        
        canCheckC1L = false;
        
        var dic = {}
        
                
        $.fn.getPostIDs1 = function(){
            a = 0
            var m = []
            var children = $('#content').children()
            for (var i = 0, len = children.length; i < len; i += 1) {
                if (children[i].id[0] == 'p'){
                    m.push(children[i].id.match(/\d+/)[0])
                }
                
            
            }
            
            return m
        }
        
        IDsC1L = []
        var childrenC = $.fn.getPostIDs1()
        for (var i = 0, len = childrenC.length; i < len;  i += 1) {
            
            if ($.fn.countNumOfComments(1,childrenC[i]) > 0){
               
                
                
                           
                dic[childrenC[i]]={}
                var childrenC2 = $('#firstCDivPost'+childrenC[i]+'').children()
                for (var j = 0, len1 = childrenC2.length; j < len1; j += 1) {
                    if (childrenC2[j].id[0] == 'c'){
                        var c = childrenC2[j].id.match(/\d+/)[0]
                        if ($('#beforeCComment'+c+'').length > 0){
                            dic[childrenC[i]][c] = $('#beforeCComment'+c+'').text()
                        }else{
                            dic[childrenC[i]][c] = 0
                        }
                        IDsC1L.push(c)
                        canCheckC1L = true;
                        
                        
                        
                        
                        
                    }
                
                }
            }else{
                dic[childrenC[i]] = 0
                if ($('#SCButtonPost'+childrenC[i]+'').attr('value') != 'Comments'){
                    dic[childrenC[i]] = dic[childrenC[i]] + parseInt($('#SCButtonPost'+childrenC[i]+'').attr('value').match(/\(([0-9 ]+)\)/)[1])
                }
                
                
                if ($('#beforeCPost'+childrenC[i]+'').length > 0){
                    dic[childrenC[i]] = dic[childrenC[i]] + parseInt($('#beforeCPost'+childrenC[i]+'').text())
                }
            }
            
        }

        

        $('#incomDispCIDs').attr('value', JSON.stringify(dic))
        
        $('#delDispCIDs').attr('value', IDsC1L)














    $.fn.saveDisplayedIDsCRest= function(){
    
        
        var dicx = {}

        var p=[].concat(IDsC1L);
        var z = IDsC1L.length
        IDsCRest = []
        canCheckCRest = false;
        while (z > 0){
            
            
            
            for (var i = 0; i < IDsC1L.length; i += 1) {
            
            
            
                
                
                
                if ($.fn.countNumOfComments(2,IDsC1L[i]) > 0){
                    dicx[IDsC1L[i]]={}
                    
                    
                    var comments = $('#firstCDivComment'+IDsC1L[i]+'').children()
                    
                    for (var j = 0, len = comments.length; j < len; j += 1) {
                    
                    
                        if (comments[j].id[0] == 'c'){
                            var c = comments[j].id.match(/\d+/)[0]
                            
                            
                            if ($('#beforeCComment'+c+'').length > 0){
                                dicx[IDsC1L[i]][c] = $('#beforeCComment'+c+'').text()
                            }else{
                                dicx[IDsC1L[i]][c] =  0
                            }
                            
                            
                            
                            
                            if ($.inArray(c, IDsC1L) == -1){
                                IDsC1L.push(c)
                                IDsCRest.push(c)
                                canCheckCRest = true;
                            }
                            z = z + 1
                            
                        }
                    }
                    
                    
           
                }else{
                    
                    var d = ($('#SCButtonComment'+IDsC1L[i]+'').attr('value').match(/\(([0-9 ]+)\)/));
                    try{
                        dicx[IDsC1L[i]] = parseInt(d[1])
                    }
                    catch(e){
                    
                        dicx[IDsC1L[i]] = 0
                    
                    }
                    
                    
                }
            }
                
                
                
            
            z = z - 1
            
            
           
        }
        

        $('#incomDispC2IDs').attr('value',JSON.stringify(dicx))
        $('#delDispC2IDs').attr('value',IDsCRest)
        
        
    
    
   
    
    }


$.fn.saveDisplayedIDsCRest= function(){
    
        
        var dicx = {}

        var p=[].concat(IDsC1L);
        var z = IDsC1L.length
        IDsCRest = []
        canCheckCRest = false;
        var start_time = new Date().getTime();
        while (z > 0){
            
            
            
            for (var i = 0; i < IDsC1L.length; i += 1) {
            
            
            
                
                
                
                if ($.fn.countNumOfComments(2,IDsC1L[i]) > 0){
                    dicx[IDsC1L[i]]={}
                    
                    
                    var comments = $('#firstCDivComment'+IDsC1L[i]+'').children()
                    
                    for (var j = 0, len = comments.length; j < len; j += 1) {
                    
                    
                        if (comments[j].id[0] == 'c'){
                            var c = comments[j].id.match(/\d+/)[0]
                            
                            
                            if ($('#beforeCComment'+c+'').length > 0){
                                dicx[IDsC1L[i]][c] = $('#beforeCComment'+c+'').text()
                            }else{
                                dicx[IDsC1L[i]][c] =  0
                            }
                            
                            
                            
                            
                            if ($.inArray(c, IDsC1L) == -1){
                                IDsC1L.push(c)
                                IDsCRest.push(c)
                                canCheckCRest = true;
                            }
                            z = z + 1
                            
                        }
                    }
                    
                    
           
                }else{
                    
                    var d = ($('#SCButtonComment'+IDsC1L[i]+'').attr('value').match(/\(([0-9 ]+)\)/));
                    try{
                        dicx[IDsC1L[i]] = parseInt(d[1])
                    }
                    catch(e){
                    
                        dicx[IDsC1L[i]] = 0
                    
                    }
                    
                    
                }
                z = z - 1
            }
            var now = new Date().getTime();
            alert((now-start_time)/1000);    
                
                
            
            
            
            
           
        }
        
        














$.fn.saveDisplayedIDsC1L = function(){
        
        canCheckC1L = false;
        
        var dic = {}
        IDsC1L = []
   
        var posts = $('#content').children()
        for (var i = 0, len = posts.length; i < len; i += 1) {
            if (posts[i].id[0] == 'p'){
                ids = posts[i].id.match(/\d+/)[0]
            

                if ($.fn.countNumOfComments(1,ids) > 0){
                   
           
                               
                    dic[ids]={}
                    var comments = $('#firstCDivPost'+ids+'').children()
                    for (var j = 0, len1 = comments.length; j < len1; j += 1) {
                        if (comments[j].id[0] == 'c'){
                            var c = comments[j].id.match(/\d+/)[0]
                            if ($('#beforeCComment'+c+'').length > 0){
                                dic[ids][c] = $('#beforeCComment'+c+'').text()
                            }else{
                                dic[ids][c] = 0
                            }
                            IDsC1L.push(c)
                            canCheckC1L = true;
                            
                            
                            
                            
                            
                        }
                    
                    }
                }else{
                    dic[ids] = 0
                    if ($('#SCButtonPost'+ids+'').attr('value') != 'Comments'){
                        dic[ids] = dic[ids] + parseInt($('#SCButtonPost'+ids+'').attr('value').match(/\(([0-9 ]+)\)/)[1])
                    }
                    
                    
                    if ($('#beforeCPost'+ids+'').length > 0){
                        dic[ids] = dic[ids] + parseInt($('#beforeCPost'+ids+'').text())
                    }
                }
            }
            
        }

        

        $('#incomDispCIDs').attr('value', JSON.stringify(dic))
        
        $('#delDispCIDs').attr('value', IDsC1L)
        


        
      
        
    
    }
    
    
    $.fn.saveDisplayedIDsCRest= function(){
    
        
        var dicx = {}

        var p=[].concat(IDsC1L);
        var z = IDsC1L.length
        IDsCRest = []
        canCheckCRest = false;
        
        while (z > 0){
            
            
            
            
            for (var i = 0; i < IDsC1L.length; i += 1) {
            
            
            
                
                
                
                if ($.fn.countNumOfComments(2,IDsC1L[i]) > 0){
                    dicx[IDsC1L[i]]={}
                    
                    
                    var comments = $('#firstCDivComment'+IDsC1L[i]+'').children()
                    
                    for (var j = 0, len = comments.length; j < len; j += 1) {
                    
                    
                        if (comments[j].id[0] == 'c'){
                            var c = comments[j].id.match(/\d+/)[0]
                            
                            
                            if ($('#beforeCComment'+c+'').length > 0){
                                dicx[IDsC1L[i]][c] = $('#beforeCComment'+c+'').text()
                            }else{
                                dicx[IDsC1L[i]][c] =  0
                            }
                            
                            
                            
                            
                            if ($.inArray(c, IDsC1L) == -1){
                                IDsC1L.push(c)
                                IDsCRest.push(c)
                                canCheckCRest = true;
                            }
                            z = z + 1
                            
                            
                        }
                    }
                    
                    
           
                }else{
                    
                    var d = ($('#SCButtonComment'+IDsC1L[i]+'').attr('value').match(/\(([0-9 ]+)\)/));
                    try{
                        dicx[IDsC1L[i]] = parseInt(d[1])
                    }
                    catch(e){
                    
                        dicx[IDsC1L[i]] = 0
                    
                    }
                    
                    
                }
                z = z - 1
                
                
            }
               
                
                
            
            
            
            
           
        }
        
        
        $('#incomDispC2IDs').attr('value',JSON.stringify(dicx))
        $('#delDispC2IDs').attr('value',IDsCRest)
        
        
    
    
   
    
    }


dic[ids] = dic[ids] + parseInt($('#SCButtonPost'+ids+'').attr('value').match(/\(([0-9 ]+)\)/)[1])
alert(parseInt($('#SCButtonPost'+ids+'').attr('value').match(/Comments\s\(\snew\d+\s\/\s\d+\)/)))







$('#SCButtonPost'+k+'').css('display','inline');
                                
    
                                try{
                                    var newCount = parseInt($('#SCButtonPost'+ids+'').attr('value').match(/\/([ 0-9]+)/)[1])
                            
                                }
                                catch(e){
                                    var newCount = parseInt($('#SCButtonPost'+ids+'').attr('value').match(/\(([0-9 ]+)\)/)[1])
                                    
                                }
                                var diff = numOfComments - newCount
    

$.each($.parseJSON(msg), function(key, val) {
                        
                        
                        $.fn.buildBaseForPost(val.pk,val.fields.personName,val.fields.timestamp,val.fields.body);  
                        $.fn.buildPosts(val.pk,val.fields.canLike,val.fields.lenLikedsIDs,val.fields.dic,val.fields.canRemove,val.fields.comments);
                        
                         
                                  
                    });
                    $.inArray(posts[i].id[0],list) == -1
    
    
    
    for (var i = 0; i < posts.length;i++){
                alert(i)
            
            
            
                
                alert(pk)
                if (sign == 0 && parseInt(posts[i].id.match(/[0-9 ]+/)) < pk){
                    alert('preppending')
                    document.body.insertBefore(base,posts[i])
                    sign = 1
                    return false;
                    
                }
            }


var base = document.createElement("div");
                 
        base.innerHTML = ("<div id='post"+pk+"' class='' style=''><br>"+
                                
            "<div class='' style=''>"+
                "<div class='username red' style='display:inline' >" +personName + "</div>"+
                "<div class='date' title="+timestamp+" style='display:inline'>"+timestamp+"</div><br>"+  
            "</div>"+
            "<div class='p' style='width:450px;word-wrap: break-word;' >"+ body +"</div>"+                                
            "<div class='submenu'>"+
                "<div id='subButDivPost"+pk+"' class='submenu-buttons'>"+                      
                "</div>"+              
            "</div>"+              
          
            "<div id = 'placeUnderPostDiv"+pk+"' style='padding-left:32px' >"+
            "</div>"+
            
            "</div>");
            
            
            
            
            var sign = 0
            var list = ['p','d','R','D']
            try{
            var posts = document.getElementById('#content').childNodes()
            for (var i = 0; i < posts.length; i++ ){
                alert('ahoj')
            }
            }catch(e){
            alert('nochild')
            
            }
            
            
            if (sign != 1){
                alert('appendings')
                
                var k = $('#content')    
                document.body.appendChild(base,k);
                 
            
            }
            
     
            
        }
        for (var i = 0; i < IDsC1L.length; i += 1){}
        
        var data = $.parseJSON(msg)
                    for (var i = 0, len = data.length; i < len; i++){




            if (sign == 0 && ( $(this).is('[id^=post]') || $(this).is('[id^=dummyPosts]') || $(this).is('[id^=RNotif]') || $(this).is('[id^=DPNotif]') ) && parseInt($(this).attr('id').match(/[0-9 ]+/)) < pk){
                $(this).before(base.join(''))
                sign = 1
                return false;
                    
            }
        
        
        sign = 0
        posts = $('#content').children()
        for (var i = 0, len = posts.length; i < len; i++){
            if (sign == 0 && (posts[i].id.match(/[0-9 ]+/)) < pk){
                alert('preppending')
                var a = document.createElement('div')
                a.innerHTML = ('vasek')
                var b = document.getElementById('post641')
                parent = document.getElementById('content')
                parent.insertBefore(a,b)
                sign = 1
                return false;
                    
            }
            
            
            
            

        }
        
        

parseInt(comments[i].id.match(/[0-9 ]+/)) < id && $.inArray(comments[i].id[0],list






if (Re && Re.length > 0 ){
     
             for (var i = 0, len = Re.length; i < len; i++){
            
                
                addon[i++] = "<div class=\'reinfo\' style='display:inline;' ><i>Re: <b>"+Re.inReplyToName+" </b> "+Re.text +" ...</i></div>";      }                             
                                                                                                
                
        }










var list = ['c','d','R','D']  
        var sign = 0
        var comments = $('#firstCDiv'+add+id+'').children()
        for (var i = 0, len = comments.length; i < len; i++){
            
            if (sign == 0  ){
                var newComment = document.createElement('div');
                newComment.setAttribute('id','comment'+id+'');
                newComment.setAttribute('class','comment');
                newComment.innerHTML = addon.slice(1,k).join('');
                document.getElementById('firstCDiv'+add+id+'').insertBefore(newComment,comments[i]);
                sign = 1
                return false;
                    
            }
            
            
            
            

        }
    
    $.inArray(comments[i].id[0],list


for (var i = 0, len = v; i < len; i += 1) {
                            }
    
    
    
    
    
    
    $.fn.saveDisplayedIDsCRest= function(){
    
        
        var dicx = {}

        var p=[].concat(IDsC1L);
        var z = IDsC1L.length
        IDsCRest = []
        canCheckCRest = false;
        
        while (z > 0){
            
            
            
            
            for (var i = 0; i < IDsC1L.length; i += 1) {
            
            
            
                
                
                
                if ($.fn.countNumOfComments(2,IDsC1L[i]) > 0){
                    dicx[IDsC1L[i]]={}
                    
                    
                    var comments = $('#firstCDivComment'+IDsC1L[i]+'').children()
                    
                    for (var j = 0; i < comments.length; j += 1) {
                    
                    
                        if (comments[j].id[0] == 'c'){
                            var c = comments[j].id.match(/\d+/)[0]
                            
                            
                            if ($('#beforeCComment'+c+'').length > 0){
                                dicx[IDsC1L[i]][c] = $('#beforeCComment'+c+'').text()
                            }else{
                                dicx[IDsC1L[i]][c] =  0
                            }
                            
                            
                            
                            
                            if ($.inArray(c, IDsC1L) == -1){
                                IDsC1L.push(c)
                                IDsCRest.push(c)
                                canCheckCRest = true;
                            }
                            z = z + 1
                            alert(z)
                            
                            
                        }
                    }
                    
                    
           
                }else{

                                
                    try{
                        dicx[IDsC1L[i]] = parseInt($('#SCButtonComment'+IDsC1L[i]+'').attr('value').match(/\(([0-9 ]+)\)/)[1])
                        
                    }
                    catch(e){
                        try{
                            dicx[IDsC1L[i]] = parseInt($('#SCButtonComment'+IDsC1L[i]+'').attr('value').match(/\/([ 0-9]+)/)[1]);
                        }
                        catch(e){
                            dicx[IDsC1L[i]] = 0
                        }
                    }
                    
                    
                }
                z = z - 1

  
                
                
            }
               
                
                
            
            
            
            
           
        }
        
        
        
        alert('done')
        $('#incomDispC2IDs').attr('value',JSON.stringify(dicx))
        $('#delDispC2IDs').attr('value',IDsCRest)
        
        
    
    
   
    
    }  
    
    
    
    if ($.fn.countNumOfComments(1,d) == 0){
                               
                                $('#SCButtonPost'+d+'').css('display','none');
                            }
    var d  = parseInt($('#comment'+j+'').closest('div[id^="first"]').attr('id').match(/[0-9]+/))



                            try{ 
                                var d  = parseInt($('#comment'+j+'').parent('div').attr('id').match(/[0-9]+/))
                                alert(d)
                            }
                            catch(e){
                                alert('catched')
                                console.log(e)
                                var d  = parseInt($('#comment'+j+'').parents('div').attr('id').match(/[0-9]+/))
                                alert(d)
                            }
    
    
    
    
    
$.ajaxq("c",{
            type: incomCForm.attr('method'),
            url: incomCForm.attr('action'),
            data: incomCForm.serialize(),
            cache: false,
            beforeSend: function(){},
            
                      
            success: function (msg) {
                
                if (msg != 'OK'){
                    alert(msg)
                    $.each($.parseJSON(msg),function(k,v){
                        try{
                            
                            var numOfComments = $.parseJSON(v);
                                
                            if (numOfComments > 0 ){
                                $('#SCButtonPost'+k+'').css('display','inline');
                                
    
                                try{
                                    
                                    
                                
                                    var newCount = parseInt($('#SCButtonPost'+k+'').attr('value').match(/\/([ 0-9]+)/)[1])
                                    
                                    var diff = parseInt($('#SCButtonPost'+k+'').attr('value').match(/ \d+ /))
                                    diff = diff + (numOfComments - newCount)
                                    
                                    

                                }
                                catch(e){
                                    
                                    try{
                                        var newCount = parseInt($('#SCButtonPost'+k+'').attr('value').match(/\(([0-9 ]+)\)/)[1])
                                    }
                                    catch(e){
                                        
                                        var newCount = 0;
                                    }
                                    
                                    
                                    var diff = numOfComments - newCount
                                    
                                    
                                    
                                }
                                

                                                                                               
                                
                                if (diff > 0){
                                    $('#SCButtonPost'+k+'').attr('value','Comments ( new '+diff+' / '+numOfComments+')');
                                }else{
                                    $('#SCButtonPost'+k+'').attr('value','Comments ('+numOfComments+')');
                                }
                            }else{
                                $('#SCButtonPost'+k+'').attr('value','Comments');
                                $('#SCButtonPost'+k+'').css('display','none');
                            }
                            
                          
                            
                            
                        }
                        catch(e){
                           
                            $.each(v,function(key,value){
                            
                                if ($('#beforeCComment'+key+'').length > 0){
                                    
                                    
                                    if (value == 0){
                                        $('#dummyCComment'+key+'').remove()
                                    
                                    }
                                
                                    if ($('#beforeCComment'+key+'').text() != value){
                                        $('#beforeCComment'+key+'').text(value)
                                        $('#dummyAmountCInputComment'+key+'').attr('value',value)
                                    }
                                }else{
                                    
                                    if (value != 0){
                                      
                                       
                                        $.fn.buildDummyNotifC(2,2,k,value,key,1)                  
                            
                                    }
                             
                        
                                } 
                                
                           
                            
                        
                            
                        
                        
                            })
                        }
                    })
                    
                } 
               
                             
            },
            error: function(msg) {
                alert('error')
            },
        });


if (canCheckC1L == true ){
            delCForm = $('#delCForm')
            $.ajaxq("c",{
                type: delCForm.attr('method'),
                url: delCForm.attr('action'),
                data: delCForm.serialize(),
                cache: false,
                beforeSend: function(){},
                           
                success: function (msg) {
                    if (msg.length > 2){
                        alert('delCmsg')
                        alert(msg)
                        
                        $.each($.parseJSON(msg), function(i,j) {
                        

                                            
                            
                            $('#comment'+j+'').before('<div id="DCNotif'+j+'" style = "padding-left:32px"><br><div>Comment was deleted</div><input type="button" class="button gray" style="display: block;" id="DCNotifButton'+j+'" value="OK" ></div>')
                            $('#DCNotifButton'+j+'').css('cursor','pointer');
                            $('#DCNotifButton'+j+'').click(function(){
                                
                                $('#DCNotif'+j+'').remove()
                            })
                            
                            
                            alert('countingParent')
                            var d  = parseInt($('#comment'+j+'').parent('div').attr('id').match(/[0-9]+/))
                            alert(d)
                            

                            $('#comment'+j+'').remove()
                            
                            
                            if ($('#SCButtonPost'+d+'').attr('value') != 'Comments'){
                                try{
                                    alert('A')
                                    var newCount = parseInt($('#SCButtonPost'+d+'').attr('value').match(/\/([ 0-9]+)/)[1])
                                    
                                    var diff = parseInt($('#SCButtonPost'+d+'').attr('value').match(/ \d+ /))
                                    var newNum = newCount - 1
                                    $('#SCButtonPost'+d+'').attr('value','Comments ( new '+diff+' / '+newNum+')');
                                    
                                }
                                catch(e){
                                    alert('B')
                                    var newCount = parseInt($('#SCButtonPost'+d+'').attr('value').match(/\(([0-9 ]+)\)/)[1])
                                    var newNum = newCount - 1
                                    $('#SCButtonPost'+d+'').attr('value','Comments ('+newNum+')');
                                    
                                }
                            }
                            if ($('#SCButtonPost'+d+'').attr('value') == 'Comments' && $.fn.countNumOfComments(1,d) == 0){
                                $('#SCButtonPost'+d+'').css('display','none');  
                            }
                            $.ajaxq.clear("c");
                            recountC1L = true;
    

if ($.fn.countNumOfComments(2,d) == 0){
                                       
                                        $('#SCButtonComment'+d+'').css('display','none');





$.fn.saveDisplayedIDsCRest= function(){
    
        
        if (recountCRest == false){
            return
        } 
        
        
        dicCRest = {}

        var p=[].concat(IDsC1L);
        var z = IDsC1L.length
        IDsCRest = []
        canCheckCRest = false;
        
        while (z > 0){
            
            
            
            
            for (var i = 0; i < IDsC1L.length; i += 1) {
            
            
            
                
                
                
                if ($.fn.countNumOfComments(2,IDsC1L[i]) > 0){
                    dicCRest[IDsC1L[i]]={}
                    
                    
                    var comments = $('#firstCDivComment'+IDsC1L[i]+'').children()
                    
                    for (var j = 0; i < comments.length; j += 1) {
                    
                    
                        if (comments[j].id[0] == 'c'){
                            var c = comments[j].id.match(/\d+/)[0]
                            
                            
                            if ($('#beforeCComment'+c+'').length > 0){
                                dicCRest[IDsC1L[i]][c] = $('#beforeCComment'+c+'').text()
                            }else{
                                dicCRest[IDsC1L[i]][c] =  0
                            }
                            
                            
                            
                            
                            if ($.inArray(c, IDsC1L) == -1){
                                IDsC1L.push(c)
                                IDsCRest.push(c)
                                canCheckCRest = true;
                            }
                            z = z + 1
                            alert(z)
                            
                            
                        }
                    }
                    
                    
           
                }else{

                                
                    try{
                        dicCRest[IDsC1L[i]] = parseInt($('#SCButtonComment'+IDsC1L[i]+'').attr('value').match(/\(([0-9 ]+)\)/)[1])
                        
                    }
                    catch(e){
                        try{
                            dicCRest[IDsC1L[i]] = parseInt($('#SCButtonComment'+IDsC1L[i]+'').attr('value').match(/\/([ 0-9]+)/)[1]);
                        }
                        catch(e){
                            dicCRest[IDsC1L[i]] = 0
                        }
                    }
                    
                    
                }
                z = z - 1

  
                
                
            }
               
                
                
            
            
            
            
           
        }
        
        
        
        
        $('#incomDispC2IDs').attr('value',JSON.stringify(dicCRest))
        $('#delDispC2IDs').attr('value',IDsCRest)
        
        
    
    
   
    
    }
    
    
    
    
                z = z - 1
            alert('decr')
            alert('z')
            alert(z)
            p.splice(0,1);
            alert('pAfterSplice')
            alert(p)



$.fn.saveDisplayedIDsCRest= function(){
        
        
        if (recountCRest == false){
            return
        } 
        
        
        dicCRest = {}

        var p=[].concat(IDsC1L);
        var z = IDsC1L.length
        IDsCRest = []
        canCheckCRest = false;
        var value
        for (var i = 0; i < p.length; i += 1) {
        
            value = p[i]

            
            
            if ($.fn.countNumOfComments(2,value) > 0){
                dicCRest[value]={}
                
                
               
                
                
                
                $.each($('#firstCDivComment'+value+'').children(),function(){
                    if ($(this).is('[id^=comment]')){
                        var c = $(this).attr('id').match(/[0-9 ]+/);
                        
                        
                        if ($('#beforeCComment'+c[0]+'').length > 0){
                        dicCRest[value][c[0]] = $('#beforeCComment'+c[0]+'').text()
                        }else{
                            dicCRest[value][c[0]]= 0
                        }
                        
                        
                        
                        
                        if ($.inArray(c[0], p) == -1){
                            p.push(c[0])
                            IDsCRest.push(c[0])
                            canCheckCRest = true;
                            alert('incr')
                            
                            
                        
                        }
                        
                    }
                })
                
                
                
       
            }else{
                
                try{
                    dicCRest[value] = parseInt($('#SCButtonComment'+value+'').attr('value').match(/\(([0-9 ]+)\)/)[1])
                    
                }
                catch(e){
                    try{
                        dicCRest[value] = parseInt($('#SCButtonComment'+value+'').attr('value').match(/\/([ 0-9]+)/)[1]);
                    }
                    catch(e){
                        dicCRest[value] = 0
                    }
                }
                
                
            }
            
            
            
        
        

        }
            
        

           

            
           
        
        

        $('#incomDispC2IDs').attr('value',JSON.stringify(dicCRest))
        $('#delDispC2IDs').attr('value',IDsCRest)
        
        
    
    
   
    
    }


if (flag == 1){
                        $.ajaxq.clear("p");
                        recountP = true;
                    }else{
                        if (signal == 1){
                            alert('clearedC')
                            
                            $.ajaxq.clear("c");
                            recountC1L = true;
                            alert('aha v done')
                            alert(aha)
                            if (aha == true){
                                alert('clearedC2')
                                $.ajaxq.clear("c2");
                                recountCRest = true;
                            }
                        }else{
                            alert('clearedC2')
                            $.ajaxq.clear("c2");
                            recountCRest = true;
                        }
                    }


if (flag == 1){
                            $.ajaxq.clear("p");
                            recountP = true;
                        }else{
                            if (signal == 1){
                                alert('clearedC')
                                
                                $.ajaxq.clear("c");
                                recountC1L = true;
                                alert('aha v done')
                                alert(aha)
                                if (aha == true){
                                    alert('clearedC2')
                                    $.ajaxq.clear("c2");
                                    recountCRest = true;
                                }
                            }else{
                                alert('clearedC2')
                                $.ajaxq.clear("c2");
                                recountCRest = true;
                            }
                        }
    
    
    if (flag == 1){
                        alert('clearedP')
                        recountP = true;
                        $.fn.saveDispPostIDs()
                        
                    }else{
                        if (signal == 1){
                            alert('clearedC')
                            recountC1L = true;
                            $.fn.saveDisplayedIDsC1L();
                            if (aha == true){
                                alert('clearedC2')
                                recountCRest = true;
                                $.fn.saveDisplayedIDsCRest()
                            }
                        }else{
                            alert('clearedC2')
                            recountCRest = true;
                            $.fn.saveDisplayedIDsCRest()
                        }
                    }
    
    
    if (flag == 1){
                alert('clearedP')
                $.general.recountC1L = true;
                $.fn.saveDisplayedIDsC1L();      
                $.general.recountCRest = true;
                $.fn.saveDisplayedIDsCRest()
                $.general.recountP = true;
                $.fn.saveDispPostIDs()

                
            }else{
                if (signal == 1){
                    alert('clearedC')
                    $.general.recountC1L = true;
                    $.fn.saveDisplayedIDsC1L();
                    
                    
                    if (aha == true){
                        alert('clearedC2')
                        $.general.recountCRest = true;
                        $.fn.saveDisplayedIDsCRest()
                        
                    }
                }else{
                    alert('clearedC2')
                    $.general.recountCRest = true;
                    $.fn.saveDisplayedIDsCRest()
                    
                    
                }
            }

if (flag == 1){
                
                $.general.recountC1L = true;
                     
                $.general.recountCRest = true;
                
                $.general.recountP = true;
                

                
            }else{
                if (signal == 1){
                    
                    $.general.recountC1L = true;
                    
                    
                    
                    if (aha == true){
                        
                        $.general.recountCRest = true;
                        
                        
                    }
                }else{
                    
                    $.general.recountCRest = true;
                   
                    
                    
                }
            }
    
    if (flag == 1 && aha > 0){
                var aha2 = $.fn.checkCRest(id)
                var aha2 = true
                
                
            }

var sign = 0
                                $.general.recountP = true
                                if ($.fn.countNumOfComments(1,j) > 0){
                                    $.general.recountC1L = true
                                    sign = 1
                                }
                                if (sign == 1 && $.fn.checkCRest(j) == true){
                                    alert('evenc2')
                                    $.general.recountCRest = true


"<div class='button gray' style='display: inline;' id='SCButton"+add+id+"'>Comments(<span> new "+ diff+"<span> / <span>"+numOfComments+"></span> )</div>";



        if ((flag == 1 && numOfComments > 2) || (flag == 2 && numOfComments > 0 )){
            addon[i++] = "<div class='button gray' style='display: inline;' id='SCButton"+add+id+"'>Comments( <span id = 'SCButtonSpan"+add+id+"'>"+numOfComments+"></span> )</div>";
        }else{
            addon[i++] = "<div class='button gray' style='display: inline;' id='SCButton"+add+id+"'>Comments</div>";
        }

addon[i++] = "<div class='button gray' style='display: inline;' id='SCButton"+add+id+"'>Comments ( <span id = 'SCButtonSpan"+add+id+"'>"+numOfComments+"</span> )</div>";


text('Comments ( <span id = "SCButtonSpan'+add+id+'">'+numOfComments+'</span> )');

    $('#SCButtonSpan'+k+'').text(''+diff+'/ '+numOfComments+'></span>');
                                }else{
                                    $('#SCButtonSpan'+k+'').text(''+numOfComments+'');
                                }
    addon[i++] = "<div id = 'SCNumDiv"+add+id+"' style='display: inline;' >";
addon[i++] = "</div>";

addon[i++] = "<div id = 'SCNumDiv"+add+id+"' style='display: inline;' >";
            addon[i++] = " (<span id = 'SCNumOfCSpan"+add+id+"'> "+numOfComments+" </span>)";
            addon[i++] = "</div>";
    
    
    
    $('#SCButton'+add+id+'').append('<div id = "SCNumDiv'+add+id+'" style="display: inline;" > (<span id = "SCNumOfCSpan'+add+id+'"> '+numOfComments+' </span>)');
    
    
    
var numOfComments = $.parseJSON(v);
                                
                            if (numOfComments > 0 ){
                                $('#SCButtonPost'+k+'').css('display','inline');
                                
    
                                
                                    
                                      
                                if ($('#SCNumDivPost'+k+'').length > 0){
                                    var newCount = parseInt($('#SCNumOfCSpanPost'+k+'').text())     
                                }else{
                                    var newCount = 0;
                                }
                                if ($('#SCNumOfNewCPost'+k+'').length > 0){
                                    
                                    var diff = parseInt($('#SCNumOfNewCPost'+k+'').text())
                                    diff = diff + (numOfComments - newCount)
                                }else{
                                    var diff = numOfComments - newCount
                                }
                                

                                

                            

                                                                                               
                                
                                if (diff > 0){
                                    if ($('#SCNumDivPost'+k+'').length > 0){
                                        $('#SCNumDivPost'+k+'').remove()
                                        $('#SCButtonPost'+k+'').append('<div id = "SCNumDivPost'+k+'" style="display: inline;" > ( <span id= "SCNumOfNewCPost'+k+'"> new <span id = "SCNumNewCPost'+k+'" >'+diff+'</span></span> / <span id = "SCNumOfCSpanPost'+k+'"> '+numOfComments+' </span>)');;
                                    }
                                    $('#SCNumOfCSpanPost'+k+'').text(numOfComments)
                                    
                                }else{
                                    $('#SCButtonPost'+k+'').append('<div id = "SCNumDivPost'+k+'" style="display: inline;" > (<span id = "SCNumOfCSpanPost'+k+'"> '+numOfComments+' </span>)');
                                }
                            }else{
                                $('#SCNumDivPost'+k+'').remove()
                                $('#SCButtonPost'+k+'').css('display','none');
                            }
                            
                            $.general.recountC1L = true;    
    




 if ($('#SCNumDivPost'+k+'').length > 0){
                                    var newCount = parseInt($('#SCNumOfCSpanPost'+k+'').text())     
                                }else{
                                    var newCount = 0;
                                }
                                if ($('#SCNewCSpanPost'+k+'').length > 0){
                                    
                                    var diff = parseInt($('#SCNewCNumSpanPost'+k+'').text())
                                    diff = diff + (numOfComments - newCount)
                                }else{
                                    var diff = numOfComments - newCount
                                }
                                

                                

                            

                                                                                               
                                
                                if (diff > 0){
                                    var flag = 0
                                    if ($('#SCNumDivPost'+k+'').length > 0){
                                        if ($('#SCNewCSpanPost'+k+'').length > 0){
                                        
                                            $('#SCNewCNumSpanPost'+k+'').text(diff)
                                            $('#SCAllCSpanPost'+k+'').text(numOfComments)
                                            flag = 1
                                        }
                                        else{
                                        
                                            $('#SCNumDivPost'+k+'').remove()
                                        }
                                    }
                                    if (flag == 0){  
                                        $('#SCButtonPost'+k+'').append('<div id = "SCNumDivPost'+k+'" style="display: inline;" > ( <span id= "SCNewCSpanPost'+k+'"> new <span id = "SCNewCNumSpanPost'+k+'" >'+diff+'</span></span> / <span id = "SCAllCSpanPost'+k+'"> '+numOfComments+' </span>)');
                                    }
                                    
                                    
                                }else{
                                    if ($('#SCNumDivPost'+k+'').length > 0){
                                        $('#SCAllCSpanPost'+k+'').text(numOfComments)
                                    }else{
                                        $('#SCButtonPost'+k+'').append('<div id = "SCNumDivPost'+k+'" style="display: inline;" > (<span id = "SCAllCSpanPost'+k+'"> '+numOfComments+' </span>)');
                                    }
                                }

 if (diff > 0){

                                }else{
                                    alert('B')
                                    if ($('#SCNumDivPost'+k+'').length > 0){
                                        alert('V')
                                        $('#SCAllCSpanPost'+k+'').text(numOfComments)
                                    }else{
                                        alert('M')
                                        $('#SCButtonPost'+k+'').append('<div id = "SCNumDivPost'+k+'" style="display: inline;" > (<span id = "SCAllCSpanPost'+k+'"> '+numOfComments+' </span>)');
                                    }
                                }





incomCForm = $('#incomCForm')
       
       
       $.ajaxq("c",{
            type: incomCForm.attr('method'),
            url: incomCForm.attr('action'),
            data: incomCForm.serialize(),
            cache: false,
            
            beforeSend: function(){
                if ($.general.recountC1L == true){
                    alert('cancelIncomC')
                    return false;
                }
                
            },
            
                      
            success: function (msg) {
                
                if (msg != 'OK'){
                    alert('incomCmsg')
                    alert(msg)
                    
                    $.each($.parseJSON(msg),function(k,v){
                        try{
                            
                            var numOfComments = $.parseJSON(v);
                                
                            if (numOfComments > 0 ){
                                $('#SCButtonPost'+k+'').css('display','inline');
                                
    
                                
                                    
                                      
                                if ($('#SCNumDivPost'+k+'').length > 0){
                                    var newCount = parseInt($('#SCAllCSpanPost'+k+'').text())     
                                }else{
                                    var newCount = 0;
                                }
                                if ($('#SCNewCSpanPost'+k+'').length > 0){
                                    
                                    var diff = parseInt($('#SCNewCNumSpanPost'+k+'').text())
                                    diff = diff + (numOfComments - newCount)
                                }else{
                                    var diff = numOfComments - newCount
                                }
                                

                                

                            

                                                                                               
                                
                               
                                
                                var flag = 0
                                if ($('#SCNumDivPost'+k+'').length > 0){
                                    alert('C')
                                    if ($('#SCNewCSpanPost'+k+'').length > 0){
                                        alert('D')
                                    
                                        $('#SCNewCNumSpanPost'+k+'').text(diff)
                                        $('#SCAllCSpanPost'+k+'').text(numOfComments)
                                        flag = 1
                                    }
                                    else{
                                        alert('E')
                                    
                                        $('#SCNumDivPost'+k+'').remove()
                                    }
                                }
                                if (flag == 0){  
                                    $('#SCButtonPost'+k+'').append('<div id = "SCNumDivPost'+k+'" style="display: inline;" > ( <span id= "SCNewCSpanPost'+k+'"> new <span id = "SCNewCNumSpanPost'+k+'" >'+diff+'</span></span> / <span id = "SCAllCSpanPost'+k+'"> '+numOfComments+' </span>)');
                                }
                                    
                                    

                                
                                
                            }else{
                                $('#SCNumDivPost'+k+'').remove()
                                $('#SCButtonPost'+k+'').css('display','none');
                            }
                            alert('setDummy')
                            $.general.recountC1L = true;
                            
                          
                            
                            
                        }
                        catch(e){
                           
                            $.each(v,function(key,value){
                            
                                if ($('#beforeCComment'+key+'').length > 0){
                                    
                                    
                                    if (value == 0){
                                        $('#dummyCComment'+key+'').remove()
                                    
                                    }
                                
                                    if ($('#beforeCComment'+key+'').text() != value){
                                        $('#beforeCComment'+key+'').text(value)
                                        $('#dummyAmountCInputComment'+key+'').attr('value',value)
                                    }
                                }else{
                                    
                                    if (value != 0){
                                      
                                       
                                        $.fn.buildDummyNotifC(2,2,k,value,key,1)                  
                            
                                    }
                             
                        
                                } 
                                
                           
                            
                        
                            
                        
                        
                            })
                        }
                    })
                    
                } 
               
                             
            },
            error: function(msg) {
                alert('error')
            },
        });


if (flag == 1){
                            $.general.recountP = true;
                            
                            if (anyComments == true){
                                
                                $.general.recountC1L = true;
                            }
                            if (anySubComments == true){
                                
                                $.general.recountCRest = true;
                            }
    
                var anyComments = false
            var anySubComments = false
	        if (signal != 2){ 
	            
	            if ($.fn.countNumOfComments(flag,id) > 0){
                    anyComments = true
                }
            }
            if (flag == 1 && anyComments == true){
                if ($.fn.checkCRest(id) == true){
                    anySubcomments = true
                }
            }
    
    
    $.each(v,function(key,value){
                            
                                if ($('#beforeCComment'+key+'').length > 0){
                                    
                                    
                                    if (value == 0){
                                        $('#dummyCComment'+key+'').remove()
                                    
                                    }
                                
                                    if ($('#beforeCComment'+key+'').text() != value){
                                        $('#beforeCComment'+key+'').text(value)
                                        $('#dummyAmountCInputComment'+key+'').attr('value',value)
                                    }
                                }else{
                                    
                                    if (value != 0){
                                      
                                       
                                        $.fn.buildDummyNotifC(2,2,k,value,key,1)                  
                            
                                    }
                             
                        
                                }

                        if ($.general.interval != 'undefined' && rest == false){
                            if ($.fn.countNumOfComments(1,data[i].pk) > 0){
                                rest = true
                            }
                            
                        }
    @models.permalink
    def get_absolute_url(self):
        return ('domain', (), {
            'slug': self.id,
            
        })
        
        
        "{% url 'openTopic' %}"



#def prerender(request):
#    if request.method == "POST":
#        topicID = request.POST.get('ids')
#        print('idckoo',topicID)
        #print('reverse',reverse('adam.views.archive',kwargs={'topicID':1 }))
#        return HttpResponseRedirect(reverse('vasek',kwargs={'topicID': topicID  }))
#    print('asdsa')
        #return HttpResponseRedirect('archive')
        #return redirect('archive', slug = topicID)
        
        
         #return HttpResponseRedirect(reverse('vasek',kwargs={'topicID': topicID  }))

<a href="{{ topic.get_absolute_url }}">

        
        #print('aa',reverse('vasek', kwargs= {'topicID': str(self.id)}))
        #return reverse('vasek',args=[str(self.pk)])
        #return reverse('vasek', args = [str(self.id)])
        #from django.http import HttpResponseRedirect

$('#showDjango').append('<textarea cols="40" id="id_body" name="body" rows="10"></textarea>')


var i = 0
                var addon = []
                addon[i++] = 
                addon[i++] = 
                addon[i++] = 

             
                addon[i++] = 
                
                
                addon[i++] = 
                
                
                $('#showDjango').append(addon.join(''));
    

    $('#topic1').click(function(){
        $('#csrf1').attr('value',csrftoken)
        $.ajax({
            type: $('#form1').attr('method'),
            url: $('#form1').attr('action'),
            data: $('#form1').serialize(),
            cache: false,
                       
            success: function (msg) {
           
                if (msg != 'OK'){               
                    alert(msg)
                    var data = $.parseJSON(msg)
                    for (var i = 0, len = data.length; i < len; i++){
                        
                         
                            
                        $.fn.buildBaseForPost(data[i].pk,data[i].fields.personName,data[i].fields.timestamp,data[i].fields.body);  
                        $.fn.buildPosts(data[i].pk,data[i].fields.canLike,data[i].fields.lenLikedsIDs,data[i].fields.dic,data[i].fields.canRemove,data[i].fields.comments);

                    }
                    jQuery("div.date").timeago();
                        
                }    
                
                
                
                
                
                
                
                
                
            
            },
            error: function(msg) {
                alert('error')
            },    
        })

            <form id= 'form1' action= '/app/adam/giveMePosts/' method='post' >
                <input id='input1'style='display: none' name='currentTopic' value='4'>
                <input id = 'postsFrom' style='display: none;' name='from' value = 0 >
                <input id = 'csrf1' style='display: none;' name='csrfmiddlewaretoken' value = "" >
            </form>


            <script language='JavaScript' type='text/javascript' src='jquery-1.10.2.js'></script>
            <script language='JavaScript' type='text/javascript' src='jquery.timeago.js'></script>
            <script language='JavaScript' type='text/javascript' src='jquery.ajaxq.js'></script>
            <link rel='stylesheet' type='text/css' href='style.css'>


    var topics = $('#topics').children()    
    for (var j = 0, len = topics.length; j < len; j += 1) {
        if (topics[j].id[0] == 't'){
            
        }
    
    
    
    }
    {% if user.is_authenticated %}
            <p>User: {{user}} <a href="/app/accounts/logout/">log out</a> </p>
        {% else %}
            <p> For commenting please <a href= "/app/accounts/login/">log in</a> </p>
        {% endif %}
        
        $('body').bind('beforeunload',function(){
        if (jQuery.type($.general.interval) != 'undefined'){
            alert('cleared')
            clearInterval($.general.interval) 
        }
    });
    
    

$.fn.clearContent = function(){
        $.each($('#topics').children(),function(){
            if ($(this).is('[id^=content]') && $(this).children().length>0){
                $(this).children().remove()
            }
        })
    }

<div id='loggedOut' style='display:none'>
    <h1>You've been logged out.</h1>
    <p>Thanks for stopping by; when you come back, don't forget to <a href="/app/accounts/login/">log in</a> again.</p>
</div>

$('#loggedOut').css('display','block')

if (msg){
                    
                    alert(msg)
                    alert(msg.length)
                    $('#login').css('display','none')
                    $('#user').text('')
                    $('#user').append("User: "+msg+"")
                    $('#authU').css('display','block')
                    $('#authL').css('display','none')
                    
                }
        }else{
                    
                    if (data.errors.password){
                        if ($('#errPassword').length > 0){
                            $('#errPassword').text('')
                        }
                        $('#errPassword').append("*"+data.errors.password)
                    }else{
                        if ($('#errPassword').length > 0){
                            $('#errPassword').text('')
                        }
                    
                    }
                    
                    if (data.errors.username){
                        if ($('#errUsername').length > 0){
                            $('#errUsername').text('')
                        }
                        $('#errUsername').append("*"+data.errors.username)
                    }else{
                        if ($('#errUsername').length > 0){
                            $('#errUsername').text('')
                        }
                    }
                    if (data.errors.__all__){
                        alert('jo')
                        if ($('#errAll').length > 0){
                            $('#errAll').text('')
                        }
                        $('#errAll').append("*"+data.errors.__all__)
                    }else{  
                        if ($('#errAll').length > 0){
                            $('#errAll').text('')
                        }
                    
                    }
                    
                }
                



<div id = 'regin' class= '' style= "display:none;">
    <h1>Register</h1>
    <form id = 'regForm' method="post" action="/app/accounts/register/" class="">
        <input style='display:none' name='csrfmiddlewaretoken' value='' id ='rinInput'>
        <div id='errAllR'></div>
        <div>Username</div>
        <div id ='errUsernameR'></div>
        <div>{{ formR.username }}</div>
        <div>email</div>
        <div id ='errEmailR'></div>
        <div>{{ formR.email }}</div>
        <div>Passwords</div>
        <div id ='errPasswordsR'></div>
        <div>Password1</div>
        <div>{{ formR.password1 }}</div>
        <div>Password2</div>
        <div>{{ formR.password2 }}</div> 
    </form>
    <input id ='reg' type="submit" class = "s" value="Register" >

</div>

$('#reg').click(function(){
        $('#rinInput').attr('value',getCookie('csrftoken'))
        $('#regForm').submit();
    })
    
$('#regForm').submit()
$('#regin').load('/app/accounts/register')




<div id='errAllR'> 
            {% if form.errors %}
                <div>*Please correct the errors below: {{ form.non_field_errors }}</div>
            {% endif %}
        </div>
        <div>Username</div>
        <div id ='errUsernameR'>
        
            {% if form.username.errors %}
                <div>{{ form.username.errors.as_text }}</div>
            {% endif %}
        
        
        </div>
        <div>{{ form.username }}</div>
        <div>email</div>
        <div id ='errEmailR'>
            {% if form.email.errors %}
                <div>{{ form.email.errors.as_text }}</div>
            {% endif %}
                        
        </div>
        <div>{{ form.email }}</div>
        
        <div>Password1</div>
        <div id='errPassword1R'>
            {% if form.password1.errors %}
                <div>{{ form.password1.errors.as_text }}</div>
            {% endif %}
        </div>
        
        
        <div>{{ form.password1 }}</div>
        <div>Password2</div>
        <div id='errPassword2R'>
            {% if form.password2.errors %}
                <div>{{ form.password2.errors.as_text }}</div>
            {% endif %}
        </div>
        <div>{{ form.password2 }}</div> 
        
        
        
<div id = 'regin' class= '' style= "display:none;">
    <h1>Register</h1>
    <form id = 'regForm' method="post" action="/app/adam/register/" class="">
        <input style='display:none' name='csrfmiddlewaretoken' value='' id ='rinInput'>
        <div id='errAllR'></div>
        <div>Username</div>
        <div id ='errUsernameR'></div>
        <div>{{ formR.username }}</div>
        <div>email</div>
        <div id ='errEmailR'></div>
        <div>{{ formR.email }}</div>
        <div>Password1</div>
        <div id ='errPassword1R'></div>
        <div>{{ formR.password1 }}</div>
        <div>Password2</div>
        <div id ='errPassword2R'></div>
        <div>{{ formR.password2 }}</div>
    </form>
    <input id ='reg' type="submit" class = "s" value="Register" >
    
</div>



    $('#rin').click(function(){
        $('#rinInput').attr('value',getCookie('csrftoken'))
        $('#regin').load('/app/accounts/register')
        $('#regin').css('display','block');
        var frm = $('#regForm')
        
        $.ajax({
            type: frm.attr('method'),
            url: frm.attr('action'),
            dataType: 'json',
            data: frm.serialize(),
            cache: false,
                      
            success: function (msg) {
                alert(msg)

          
                             
            },
            error: function(msg) {
            alert('error')
            },
            complete:function(msg){
                
                
            },
        }).done(function(){
            
            
            
            
            
        })
        

    })
    
    $('#rinInput').attr('value',getCookie('csrftoken'))
        $('#regForm').submit()
        
        
        <div id = 'regin' class= '' style= "display:none;">

    
</div>
    $('#ref').click(function(){
    
    
        $('#refInput').attr('value',getCookie('csrftoken'))
        var frm = $('#refForm')
        
        $.ajax({
            type: frm.attr('method'),
            url: frm.attr('action'),
            data: frm.serialize(),
            cache: false,
                      
            success: function (msg) {
                var data = $.parseJSON(msg)
                $('#captchaImg').attr('src',data.img)
                $('#id_captcha_0').attr('value',data.key)
                    

          
                             
            },
            error: function(msg) {
            alert('error')
            },
            complete:function(msg){
                
                
            },
        }).done(function(){
            
            
            
            
            
        })
    
    
    
    
    
    
    
    
    
    
    
    
    })
    
        <form id = 'refForm' method="post" action="/app/accounts/refreshCaptcha/" class="">
        <input style='display:none' name='csrfmiddlewaretoken' value='' id ='refInput'>
    </form>
    
    $('#authent').load('/app/adam/showAuthen')
    
    $('#login').css('display','block')
    
    
    
            $.post( "/app/adam/showAuthen/",$('#sa').serialize(), function(data ) {
            alert('vasek')
            alert(data.status)
            $('#captchaImg').attr('src',data.img)
            $('#id_captcha_0').attr('value',data.key)
        
        },"json")
        

    $('#sub').click(function(){
        $('#linInput').attr('value',getCookie('csrftoken'))
        
        $.post( "/app/adam/showAuthen/",$('#sa').serialize(), function(data ) {
                if (data.status == 'OK'){
                    
                    $('#login').css('display','none')
                    $('#user').text('')
                    $('#user').append("User: "+data.user+"")
                    $('#authU').css('display','block')
                    $('#authL').css('display','none')
                    var num = parseInt($('#content').attr('value'))
                    if (num != 0){
                        $('#content').load('/app/adam/openTopic/domain/'+num+'');
                    }
                }else{
                    
                    if (data.errors.password){
                        
                        $('#errPassword').text('')
                        
                        $('#errPassword').append("*"+data.errors.password)
                    }else{
                        $('#errPassword').text('')
                    }
                    
                    if (data.errors.username){
                        
                        $('#errUsername').text('')
                        
                        $('#errUsername').append("*"+data.errors.username)
                    }else{
                        $('#errUsername').text('')
                    }
                    if (data.errors.__all__){
                        
                        $('#errAll').text('')
                        
                        $('#errAll').append("*"+data.errors.__all__)  
                    }else{
                        $('#errAll').text('')
                    }
                    
                }
        
        },"json")
        $('#rinInput').attr('value',getCookie('csrftoken'))
            $('#authent').text('')
            $('#authent').load('/app/accounts/register')
            $('#regin').css('display','block');
            $('#main').css('opacity','0.4')
            
            
            
                    $('#lout').click(function(){
            alert('clicked')
            $.getJSON( "/app/adam/logout/",{}, function( data ) {
                if (data.status=='OK'){
                    alert('ok')
                    
                    $('#authU').css('display','none')
                    $('#authL').css('display','block')
                    var num = parseInt($('#content').attr('value'))
                    if (num != 0){
                        $('#content').load('/app/adam/openTopic/domain/'+num+'');
                    }
                }
                
            
            })
        
        
        })
        
        $('#statusInfo').click(function(){
                    $('#statusInfo').loadingOverlay('remove')
                })
                
                
                $('#statusInfo').loadingOverlay('remove')
                $('#statusInfo').loadingOverlay({loadingText: 'activation-email was sent'})


<div>year of birth</div>
        <div id ='errYearOfBirth'></div>
        <div>{{ form.yearOfBirth }}</div>
        <div>country</div>
        <div id ='errCountry'></div>
        <div>{{ form.country }}</div>


<input name="remember_me" type="checkbox">Keep me logged in


<div>
                
                <form action="" method="post">{% csrf_token %}
                    {{ form.new_password1.errors }}
                    <p class="aligned wide"><label for="id_new_password1"> New password</label>{{ form.new_password1 }}</p>
                    {{ form.new_password2.errors }}
                    <p class="aligned wide"><label for="id_new_password2"> Confirm password:</label>{{ form.new_password2 }}</p>
                    <p><input type="submit" value="Change my password" /></p>
                </form>

            {% else %}

                <div>
                    Password reset unsuccessful
                </div>

                <div>
                    The password reset link was invalid, possibly because it has already been used.  Please request a new password reset
                </div>

            {% endif %}

<div>Password change</div>
<form action="" method="post">{% csrf_token %}
<div>
{% if form.errors %}
    <p class="errornote">
    {% blocktrans count counter=form.errors.items|length %}Please correct the error below.{% plural %}Please correct the errors below.{% endblocktrans %}
    </p>
{% endif %}

<h1>{% trans 'Password change' %}</h1>

<p>{% trans "Please enter your old password, for security's sake, and then enter your new password twice so we can verify you typed it in correctly." %}</p>

<fieldset class="module aligned wide">

<div class="form-row">
    {{ form.old_password.errors }}
    <label for="id_old_password" class="required">{% trans 'Old password' %}:</label>{{ form.old_password }}
</div>

<div class="form-row">
    {{ form.new_password1.errors }}
    <label for="id_new_password1" class="required">{% trans 'New password' %}:</label>{{ form.new_password1 }}
</div>




        
        
                            if (data.isCaptcha =='1'){
                        var i = 0
                        var addon = []
                        addon[i++]= "<div>Captcha</div>";
                        addon[i++]= "<div id ='errCaptcha'></div>"
                        addon[i++]= "<div id ='captcha'>{{ formCap }}</div>"
                        $('#showCaptcha').append(addon.join(''))
                    
                    }

<div class="form-row">
{{ form.new_password2.errors }}
    <label for="id_new_password2" class="required">{% trans 'Password (again)' %}:</label>{{ form.new_password2 }}
</div>

</fieldset>

<div class="submit-row">
    <input type="submit" value="{% trans 'Change my password' %}" class="default" />
</div>

<script type="text/javascript">document.getElementById("id_old_password").focus();</script>
</div>
</form></div>

{% endblock %}





















@sensitive_post_parameters()
@csrf_protect
@never_cache
def login(request,redirect_field_name=REDIRECT_FIELD_NAME,
               authentication_form=EmailAuthenticationForm, *args, **kwargs):
    redirect_to = request.REQUEST.get(redirect_field_name, '')

    # call original login handler for not AJAX requests
    if not request.is_ajax():
        return view_login(request,redirect_field_name=redirect_field_name,
                          authentication_form=authentication_form, *args, **kwargs)

    if request.method == "POST":
        form = authentication_form(data=request.POST)
        if form.is_valid():
            netloc = urlparse.urlparse(redirect_to)[1]

            if not redirect_to:
                redirect_to = settings.LOGIN_REDIRECT_URL

            elif netloc and netloc != request.get_host():
                redirect_to = settings.LOGIN_REDIRECT_URL

            auth_login(request, form.get_user())

            if request.session.test_cookie_worked():
                request.session.delete_test_cookie()

            #res = { 'status': 'OK', 'redirect': request.POST.get('next',r''), 'message': '' }
            res = { 'status': 'OK'}
            
            json = simplejson.dumps(res, cls=DjangoJSONEncoder)

            return HttpResponse(json, mimetype='application/javascript')
        else:
            res = {}
            res.update({'status': 'ERROR'})
            # form.errors is not a python dictionary :P 
            # http://groups.google.com/group/django-users/browse_thread/thread/d60e8d6d591f8eed#
            form_errors = dict([(k, [unicode(e) for e in v]) for k,v in form.errors.items()]) 
            res.update({'form_errors': form_errors})
            res = simplejson.dumps(res, cls=DjangoJSONEncoder)
            return HttpResponse(res, mimetype='application/javascript')

    else:
        res = simplejson.dumps({ 'status': 'ERROR', 'message': "Bad request" },
                               cls=DjangoJSONEncoder)
        return HttpResponse(res, mimetype='application/javascript')

"""Views for the registration_email app."""
from django.contrib.auth.views import login


def login_remember_me(request, *args, **kwargs):
    """Custom login view that enables "remember me" functionality."""
    if request.method == 'POST':
        if not request.POST.get('remember_me', None):
            request.session.set_expiry(0)
    return login(request, *args, **kwargs)
    
    



from django.conf.urls.defaults import *
#from django.views.generic.simple import direct_to_template
from django.views.generic.base import TemplateView
from registration.views import activate
from registration.views import register
from registration.backends.default.views import ActivationView

urlpatterns = patterns('',
                       url(r'^activate/complete/$',
                           TemplateView.as_view(template_name='registration/activation_complete.html'),
                           name='registration_activation_complete'),
                       # Activation keys get matched by \w+ instead of the more specific
                       # [a-fA-F0-9]{40} because a bad activation key should still get to the view;
                       # that way it can return a sensible "invalid key" message instead of a
                       # confusing 404.
                       url(r'^activate/(?P<activation_key>\w+)/$',
                           activate,
                           {'backend': 'registration.backends.default.DefaultBackend'},
                           name='registration_activate'),
                       #url(r'^activate/(?P<activation_key>\w+)/$',
                       #    ActivationView.as_view(),
                       #    name='registration_activate'),
                       url(r'^register/$',
                           register,
                           {'backend': 'registration.backends.default.DefaultBackend'},
                           name='registration_register'),
                       #url(r'^register/complete/$',
                       #    TemplateView.as_view(template_name='registration/registration_complete.html'),
                       #    name='registration_complete'),
                       #url(r'^register/closed/$',
                       #    TemplateView.as_view(template_name='registration/registration_closed.html'),
                       #    name='registration_disallowed'),
                       #(r'', include('registration.auth_urls')),
                       #)  


    $.validator.setDefaults({
        submitHandler:function(){alert('submitted')}
    })
    
    
    <script>

    $("#sa").validate({
      rules: {
        id_username: {
          required: true,
          email: true
        }
      }
    });
</script>

FORM_RULES = {
    '{{ form.username }}': 'required'
};
FORM_MESSAGES = {
    '{{ form.username }}': 'This field is required'
};

value = value.replace(/(?:(?:^|\n)\s+|\s+(?:$|\n))/g,'').replace(/\s+/g,' ')
                value = value.replace(/\s+/g, '');

                $('#errUsername').append($('Did you mean?'+'<div id = "fullAddr" style="cursor:pointer">'+val+'@<div id="sugDom" style="font-weight:bold">'+suggestion.domain+'</div></div>').fadeIn(150))

<input type='button' id='showP' value='showPassword'>


    var $toggleAnchor = $parent.find('.'+o.linkClass),
        toggleAnchorWidth = $toggleAnchor.outerWidth(),
        toggleAnchorLeft = parseInt($toggleAnchor.css('left'), 10),
        toggleAnchorHeight = $toggleAnchor.outerHeight(),
        toggleAnchorTop = parseInt($toggleAnchor.css('top'), 10);
        
    $toggleAnchor.css({
      'left': (toggleAnchorLeft - toggleAnchorWidth - o.linkRightOffset),
      'top': (toggleAnchorTop - toggleAnchorHeight - o.linkTopOffset)
    });
    
    
    
    $('#'+o.idInput+''));
    $.getJSON( "app/adam/curUser/",{}, function( data ) {




if ($('#id_password2').val().length === 0){
            $('#errPassword2').text('')
            $('#errPassword2').append('*This field is required')
            flag = 1
        
        }else{
            $('#errPassword2').text('')
        }
        if ($('#id_password1').val() != $('#id_password2').val()){
            $('#errPassword1').text('')
            $('#errPassword2').text('')
            $('#errPassword2').append('The two password fields didnt match')
            flag = 1
        }
        
        
                if ($('#id_password').val().length === 0){
            $('#errPassword').text('')
            $('#errPassword').append('*This field is required')
            alert('w')
            flag = 1
            
        }else{
            $('#errPassword').text('')
        }
        if ($('#showCaptcha').children().length > 0){
            if ($('#id_captcha_1').val().length === 0){
                $('#errCaptcha').text('')
                $('#errCaptcha').append('*This field is required')
                flag = 1
            
            }else{
                $('#errCaptcha').text('')
                
            }
        
        
        
        
        }
        
        $('#errPassword').append('*Heslo musi obsahovat aspon 6 znakov (bez medzier)')
        
        
        $('#errNewP2').text('')
                                if (data.errors.new_password2){
                                    $('#errNewP2').append("*"+ data.errors.new_password2)
                                }
    
    
                        if ($('#id_new_password1').val().length === 0){
                        $('#errNewP1').text('')
                        $('#errNewP1').append('*This field is required')
                        flag = 1
                    
                    }else{
                        $('#errNewP1').text('')
                    }
                    if ($('#id_new_password2').val().length === 0){
                        $('#errNewP2').text('')
                        $('#errNewP2').append('*This field is required')
                        flag = 1
                    
                    }else{
                        $('#errNewP2').text('')
                    }
                    if (flag != 1 && $('#id_new_password1').val() != $('#id_new_password2').val()){
                        $('#errNewP1').text('')
                        $('#errNewP2').text('')
                        $('#errNewP2').append('The two password fields didnt match')
                        flag = 1
                    }
                    if ($('#id_old_password').val().length === 0){
                        $('#errOldP').text('')
                        $('#errOldP').append('*This field is required')
                        flag = 1
                    
                    }else{
                        $('#errOldP').text('')
                    }
                    if ($('#id_captcha_1').val().length === 0){
                        $('#errCaptcha').text('')
                        $('#errCaptcha').append('*This field is required')
                        
                        
                        flag = 1
                    
                    }else{
                        $('#errCaptcha').text('')
                        
                    }

/media/SAMSUNG/backupDjango/registration
 $('#token').attr('value',getCookie('csrftoken'))
 
 var csrftoken = $.cookie('csrftoken');
    var token=getCookie('csrftoken')
    alert($.cookie('csrftoken'))
    alert(token)
    
    
    
    
         var csrftoken = $.cookie('csrftoken');
    var token=getCookie('csrftoken')
    alert($.cookie('csrftoken'))
    alert(token)
    
    function csrfSafeMethod(method) {
         // these HTTP methods do not require CSRF protection
         return (/^(GET|HEAD|OPTIONS|TRACE)$/.test(method));
     }
     $.ajaxSetup({
         crossDomain: false, // obviates need for sameOrigin test
         beforeSend: function(xhr, settings) {
             if (!csrfSafeMethod(settings.type)) {
                 xhr.setRequestHeader("X-CSRFToken", $.cookie('csrftoken'));
             }
         }
     });
     replace( /[^\w ]/g, "" )
     
     
     
     var currentTopic = {{ currentTopic }};
        var createForm = $('#createPostForm');
        var wordCount = $.trim($("textarea#id_body").val()).split(/\b\S+\b/g).length-1
        alert(wordCount)
        var c = $.trim($("textarea#id_body").val()).split(/\b\S+\b/g)
        for (var j = 0, len1 = c.length; j < len1; j += 1) {
            alert(c[j])
        }
        var d = $.trim($("textarea#id_body").val()).split(/\s+/)
        var c = $.trim($("textarea#id_body").val()).split(/\b\S+\b/g).length-1
        alert(c)
        for (var j = 0, len1 = d.length; j < len1; j += 1) {
            alert(d[j])
        }
        var d = $.trim($("textarea#id_body").val()).split(/\s+/)
                var d = $.trim($("textarea#id_body").val()).split(/\s+/)
        alert(d)
        var d = $.trim($("textarea#id_body").val()).split(/\s+/)
        alert(d)
        
        var c = $.trim($("textarea#id_body").val()).split(/[\s,.:;@!?\/]+/)
        var d = $.trim($("textarea#id_body").val()).split(/\s+/)
        alert(d.length)
        alert(d)
        var c = $.trim($("textarea#id_body").val()).replace(/[\s,\.\;\:\@\!\?\/]+/,"").split(/[\s\,\.\:\;\@\!\?\/]+/)
        
        
        var c = $("textarea#id_body").val().replace(/^[\s,\.\;\:\@\!\?\/]+/,"").replace(/[\s,\.\;\:\@\!\?\/]+$/,"").split(/[\s\,\.\:\;\@\!\?\/]+/)
        
            
    $.fn.checkPost = function{
        var c = $("textarea#id_body").val().replace(/^[\s,\.\;\:\@\!\?\/]+/,"").replace(/[\s,\.\;\:\@\!\?\/]+$/,"").split(/[\s\,\.\:\;\@\!\?\/]+/)
        var i = 0
        if (c.length > 3){
            for (var j = 0, len1 = c.length; j < len1; j += 1) {
                if (c[j].length > 2){
                    i = i + 1
                }
            }
            if (i > 1){
                return 1
            }
        }
        
    }
    top.glob = "global variable";
                window.$vars = {
        width: 300
    };
    window.glob='pepa'
    window.top = 'bara'
    alert(window.$vars.width)
    
    display:inline-block;z-index:100;position:absolute;margin-top:-45px
    
            $('#p').mask()
        $('#createPostButtonDiv').mask()
        
                    $('#p').unmask()
            $('#createPostButtonDiv').unmask()

            $('#check').css('border','')
                        $('#check').css('border','1px solid red')
                                        $('#check').css('display','inline-block')
    
    
    #L = []
                    for res in results:
                        res.numOfComments = len(BlogComment.objects.filter(idPost= res.id,idParentComment=None,valid = 1))
                        
                    
                    results = list(results)
                    results.sort(key=lambda x: x.numOfComments, reverse=True)
                    
                    #for res in results:
                    #    L.append(res.id)
                    for res in results:
                        if res.id == int(fromPost):
                            ind = results.index(res)
                    #for res in results:
                    #    print('ressss',res.id,res.numOfComments,L.index(int(res.id)))
                    #print('fromPost',fromPost)
                    #ind = L.index(int(fromPost))
                    #print('ind',ind)
                    ind1= ind + 1
                    #print('int1',ind1)
                    ind2 = ind1 + 6
                    #print('ind2',ind2)
                    flag = 1
                    posts = results[ind1:ind2]
                    
                    
                    
                        $('#newest').click(function(){
        $('#switcher').attr('value',0)
        $('#content').text('')
        $('#oldestPostId').attr('value',0)
        $('#postsFrom').attr('value',0)
        $.fn.reloadAllPosts()
        
    })
    $('#mostCommented').click(function(){
        $('#switcher').attr('value',1)
        $('#content').text('')
        $('#oldestPostId').attr('value',0)
        $('#postsFrom').attr('value',0)
        $.fn.reloadAllPosts()
    })
    $('#mostFavourite').click(function(){
        $('#switcher').attr('value',2)
        $('#content').text('')
        $.fn.reloadAllPosts()
    })
    
    
    
        $.each($('#buttonPanel').children(),function(){
        $(this).click(function(){  
            if ($(this).is('[id=newest]')){
                $('#switcher').attr('value',0)
            }
            if ($(this).is('[id=mostCommented]')){
                $('#switcher').attr('value',1)
            }
            if ($(this).is('[id=mostFavourite]')){
                $('#switcher').attr('value',2)
            }
            $('#content').text('')
            $('#oldestPostId').attr('value',0)
            $('#postsFrom').attr('value',0)
            $.fn.reloadAllPosts()
        })
    })
    
    
    if ($('#switcher').attr('value') == 0){    
                ids = Math.min.apply(Math,L);
            }
            if ($('#switcher').attr('value') > 0){
                ids = L[L.length-1];
            } 
            
            
                $.fn.buildSign = function(flag,id,character){
        return
        var i = 0
        var addon = []
        if (flag == 1){
            addon[i++] = "<div style='display:inline;color:#4466dd'>";
            if (character == 1){
                addon[i++] = "positive"
            }
            if (character == 2){
                addon[i++] = "negative"
            }
            if (character == 3){
                addon[i++] = "informative"
            }
            addon[i++] = " </div>"
        }
        var $area = $('#postSign'+id+'');
        $area.append(addon.join('')); 
    }
    
    
    
        $.fn.checkEnabilityC = function(sign,flag,id){
        if (flag == 1){
            var add = 'Post';
          
        }
        else{
            var add = 'Comment';
            
        }
        if ($.fn.checkC(flag,id) === 1){  
            $("#createCButton"+add+id+"").prop("disabled",false);
            $("#createCButton"+add+id+"").removeClass('disabled')
            $("#createCButton"+add+id+"").addClass('s')
            
            
        }else{
            $("#createCButton"+add+id+"").prop("disabled",true);
            $("#createCButton"+add+id+"").removeClass('s')
            $("#createCButton"+add+id+"").addClass('disabled')
            
        }
    }

z toho aspon 2 slova musia mat minimalne 3 pismena
<div id='postLength'>Napis <div id = 'morePostLength'>este</div>aspon<div id='numOfPostWords'>4</div>slova</div> 
c = $.trim(c)

var c = txt.replace(/^[\s,\.\;\:\@\!\?\/]+/g,"").replace(/[\s,\.\;\:\@\!\?\/]+$/g,"").split(/[ \s\,\.\:\;\@\!\?\/]+/)
id='wordsPostLength'>Z toho <span id='moreWordsPostLength'>este</span> aspon<span id = 'numOfWordsPostLength'>2</span> slova musia mat minimalne 3 pismena</span>




        var i = 0
        
        for (var j = 0, len1 = c.length; j < len1; j += 1) {
            if (c[j].length > 2){
                    i = i + 1
                }
            }
        if (i > 1){
            $('#wordsPostLength').css('display','none')
            txtStatus.text('')
            txtStatus.append("<img src='{{ STATIC_URL }}is.jpg'>")
        
        
        
            return 1
        }else{
            $('#wordsPostLength').css('display','inline-block')
            if (i == 0){
                alert('nula')
                $('#moreWordsPostLength').css('display','none')
            }else{
                $('#moreWordsPostLength').css('display','inline-block')
            }
            $('#numOfWordsPostLength').text(2-i)            
            return 0
        }


                    addon[i++] = "<span id='CLength"+add+id+"'>Napis <span id = 'moreCLength"+add+id+"' style='display:none'>este</span>aspon<span id='numOfCWords"+add+id+"'>4</span>slova</span><span id='wordsCLength"+add+id+"'><span id='moreWordsCLength"+add+id+"'>este</span> aspon<span id = 'numOfWordsCLength"+add+id+"'>2</span> slova musia mat minimalne 3 pismena</span>"
                    
                    
                    
                     base[i++] = "<div id='post"+pk+"'><br>";
            base[i++] = "<div id='postSign"+pk+"' style='display:inline-block'></div>"
            base[i++] = "<div class='' style='display:inline-block'>"
                base[i++] = "<div class='' style=''>";
                    base[i++] = "<div class='username red' style='display:inline' >" +personName + "</div>";
                    base[i++] = "<div class='date' title="+timestamp+" style='display:inline'>"+timestamp+"</div><br>";  
                base[i++] = "</div>";
                base[i++] = "<div class='p' style='width:450px;word-wrap: break-word;' >"+ body +"</div>";                                
                base[i++] = "<div class='submenu'>";
                    base[i++] = "<div id='subButDivPost"+pk+"' class='submenu-buttons'>";                      
                    base[i++] = "</div>";              
                base[i++] = "</div>";
            base[i++] = "</div>";
                         
            base[i++] = "<div id = 'placeUnderPostDiv"+pk+"' style='padding-left:72px' >";
            base[i++] = "</div>";
        base[i++] = "</div>";
        
        
                        #if switch == '1':
                #    for res in results:
                #        res.numOfComments = len(BlogComment.objects.filter(idPost= res.id,idParentComment=None,valid = 1))
                #    results = list(results)
                #    results.sort(key=lambda x: x.numOfComments, reverse=True)
                
                                #if switch == '1':
                #    for res in results:
                #        res.numOfComments = len(BlogComment.objects.filter(idPost= res.id,idParentComment=None,valid = 1))       
                #    results = list(results)
                #    results.sort(key=lambda x: x.numOfComments, reverse=True)

    $('#token').attr('value',$.cookie('csrftoken'))
    
    

            $( document ).ready(function(){
                $('#saveImage').click(function(){
                    $('#uplInput').attr('value',$.cookie('csrftoken'))
                    var frm = $('#saveImageForm')
                    $.ajax({
                        type: frm.attr('method'),
                        url: frm.attr('action'),
                        data: frm.serialize(),
                        beforeSend: function(){

                        },
                        cache: false,
                                  
                        success: function (msg) {
                            alert(msg)
                            
                            

                            
                            
                                         
                        },
                        error: function(msg) {
                        alert('error')
                        },
                        complete:function(msg){
                            
                            
                        },
                    }).done(function(){

                    
                    })      
                });
            })
            
            
            



            $( document ).ready(function(){
            
            
            


            $( document ).ready(function(){
                $('#saveImage').click(function(){
                    

                    $('#uplInput').attr('value',$.cookie('csrftoken'))
                    var data = new FormData($('#saveImageForm').get(0));
                    
                    $.ajax({
                        type: $('#saveImageForm').attr('method'),
                        url: $('#saveImageForm').attr('action'),
                        data: data,
                        cache:false,
                        processData: false,
                        contentType: false,
                                  
                        success: function (msg) {
                            alert(msg)
                            
                            

                            
                            
                                         
                        },
                        error: function(msg) {
                        alert('error')
                        },
                        complete:function(msg){
                            
                            
                        },
                    }).done(function(){

                    
                    })      
                });
            })
                $('#saveImage').click(function(){
                    $('#uplInput').attr('value',$.cookie('csrftoken'))
                    var frm = $('#saveImageForm')
                    frm.submit()      
                });
            
           
            var options = { 
                    target:   '#output', 
                    beforeSubmit:  function(){},
                    uploadProgress: OnProgress, //upload progress callback 
                    success:       function(){},
                    resetForm: true  
            }; 
        
             $('#MyUploadForm').submit(function() { 
                    $(this).ajaxSubmit(options);            
                    return false; 
                });
        function OnProgress(event, position, total, percentComplete){
    //Progress bar
    progressbar.width(percentComplete + '%') //update progressbar percent complete
    statustxt.html(percentComplete + '%'); //update status text
    if(percentComplete>50)
        {
            statustxt.css('color','#fff'); //change status text to white after 50%
        }
    }
});


        <div id="upload-wrapper">
        <div align="center">
        <h3>Ajax Image Uploader with Progressbar</h3>
        <span class="">Image Type allowed: Jpeg, Jpg, Png and Gif. | Maximum Size 1 MB</span>
        <form action="processupload.php" onSubmit="return false" method="post" enctype="multipart/form-data" id="MyUploadForm">
        <input name="ImageFile" id="imageInput" type="file" />
        <input type="submit"  id="submit-btn" value="Upload" />
        <img src="images/ajax-loader.gif" id="loading-img" style="display:none;" alt="Please Wait"/>
        </form>
        <div id="progressbox" style="display:none;"><div id="progressbar"></div ><div id="statustxt">0%</div></div>
        <div id="output"></div>
        </div>
        </div> 
        
        

            $( document ).ready(function(){
            
                var options = { 
                        target:   '#output', 
                        beforeSubmit:  function(){},
                        uploadProgress: OnProgress, //upload progress callback 
                        success:       function(){},
                        resetForm: true  
                };
            
            
                function OnProgress(event, position, total, percentComplete)
                {
                    //Progress bar
                    $('#progressbar').css('width',(percentComplete + '%')) //update progressbar percent complete
                    
                    $('#statustxt').text(percentComplete + '%'); //update status text
                    if(percentComplete>50)
                        {
                            $('#statustxt').css('color','#fff'); //change status text to white after 50%
                        }
                }
            
            
                $('#saveImage').click(function(){
                    $('#uplInput').attr('value',$.cookie('csrftoken'))
                    $('#saveImageForm').ajaxSubmit(options);
                    return false;
                })   
                
                
                
                
                
                                	var thumb = $('#thumb');	

	                new AjaxUpload('imageUpload', {
		                action: $('#newHotnessForm').attr('action'),
		                name: 'image',
		                onSubmit: function(file, extension) {
			                $('#preview').addClass('loading');
		                },
		                onComplete: function(file, response) {
			                thumb.load(function(){
				                $('#preview').removeClass('loading');
				                thumb.unbind();
			                });
			                thumb.attr('src', response);
		                }
	                });      
                 
                    
                        
                        
                        
                        
                        
                                <div id="upload-area">
            <div id="preview">
	            <img width="100px" height="100px" src="http://cdn.css-tricks.com/images/icons/128px/zurb.png" id="thumb">
            </div>

	        <form action="/playground/ajax_upload" id="newHotnessForm">
		        <label>Upload a Picture of Yourself</label>
		        <input type="file" size="20" id="imageUpload" class=" ">
		        <button class="button" type="submit">Save</button>
	        </form>
        </div>
        
        $('#output').append('<img src="{{ MEDIA_URL }}'+msg+'">')
        
        
        
        
                        alert('a')
var files = $('#kukuc').val().files ? $('#kukuc').val().files : [];
        if (!files.length || !window.FileReader) return; // no file selected, or no FileReader support
        alert('m')
        if (/^image/.test( files[0].type)){
            alert('p') // only image file
            var reader = new FileReader(); // instance of the FileReader
            reader.readAsDataURL(files[0]); // read the local file
 
            reader.onloadend = function(){ // set image data as background of div
                $("#imagePreview").css("background-image", "url("+this.result+")");
            }
        }
        $('#saveImageForm').resetForm()
                            $('#saveImageForm').clearForm()
                            $('#saveImageForm').clearFields()


             function updateCoords(c)
            {
                $('#x').val(c.x);
                $('#y').val(c.y);
                $('#w').val(c.w);
                $('#h').val(c.h);
            };


                 
            
            
            $('#crop').click(function(){
                $('#cropbox').Jcrop({
                    aspectRatio: 1,
                    onSelect: updateCoords
                });
            })
        })
            
        
        </script>
    </head>
    <body>
        
        <input id ='saveImage' type='button' class='s'  value='Save'>
        <form enctype='multipart/form-data' id ='saveImageForm' action='/app/adam/saveImage/' method='post' >
            <input style='display:none' name='csrfmiddlewaretoken' value='' id ='uplInput'>
            {{ form.picture }}
        </form>
        <div id="progressbox" style="display:inline-block;"><div id="progressbar"></div ><div id="statustxt">0%</div></div>
        <div id='output'></div>
        <input id ='crop' type='button' class='s'  value='crop!!'>

    </body
    
    
    
    $('#cropBox').Jcrop({
                    width: 50,
                    height: 50,
                    aspectRatio: 1,
                    onSelect: updateCoords
                });
                
                
                $('#blah').imgAreaSelect({ aspectRatio: '1:1', handles: true });
                
                
                
                $('#id_picture')[0].files[0] 
                
                $('#id_picture')[0].files[0] = $('img').attr('src')
                
                
                
                insert into adam_blogpost(id,idPerson_id,body,timestamp,idTopic_id,valid,character) values(1,1,'auto',000000,1,1,'moto');
                
                $('#blah').imgAreaSelect({ aspectRatio: '1:1', handles: true });
                
                $('#blah').resizecrop({
                  width:70,
                  height:70,
                  zoom: true,
                  //vertical:"top"
                });
$('#fCropInput').attr('value',$('#outer').css('border-width'))



if image_type == 'png':
                print("PNG")
                from PIL import Image
                png = Image.open('/image.png')
                png.load() # required for png.split()
                jpg = Image.new("RGB", png.size, (255, 255, 255))
                jpg.paste(png, mask=png.split()[3]) # 3 is the alpha channel
                jpg.save('foo.jpg', 'JPEG', quality=80)
                
                                             if ($.file.type == 'jpeg'){
                                $.file.suffix = $.file.type
                             }else{
                                $.file.suffix = $.file.defaultType = 'jpg'
                             }
                             
                                             $.file = new Object();
                $.file.defaultType = 'jpg'
                $.file.suffix
                
                    $.fn.buildSign = function(flag,id,character){
        var i = 0
        var addon = []
        if (flag == 1){
            addon[i++] = "<div style='width:40px;height:40px;padding:5px'><div>"
            if (character == 1){
                addon[i++] = "<img src={{ STATIC_URL }}plus.jpg>"
            }
            if (character == 2){
                addon[i++] = "<img src={{ STATIC_URL }}minus.jpg>"
            }
            addon[i++] = "<div>"
        }
        var $area = $('#postSign'+id+'');
        $area.append(addon.join('')); 
    }
    
    
    def save_image(request):
    print('a')
    if request.method == 'POST' and request.is_ajax():
        b = request.FILES.get('picture')  
        print('ssss',request.FILES)
        form = ImageUploadForm(data=request.POST,files=request.FILES)
        if form.is_valid():
            print("VALID!!")
            photo = form.cleaned_data['picture']
            
            import imghdr

            image_type = imghdr.what(photo)
            if image_type == 'jpeg':
                image_type = 'jpg'
            photo.name = request.user.username + "." + image_type
            if User.objects.get(pk=request.user.id).image != None:
                print('deletinggg')
                User.objects.get(pk=request.user.id).image.delete(True)
            m = User.objects.get(pk=request.user.id)
            m.image = photo
            m.save()
            print('imtype',image_type)
            if image_type not in ['jpg','jpeg']:
                print('in')
                print("PNG")
                from PIL import Image
                new = Image.open('home/gothos/Downloads/testPic/'+request.user.username+'.'+image_type)
                new.load() # required for png.split()
                jpg = Image.new("RGB", new.size, (255, 255, 255))
                print('new',new)
                print('newsplit',new.split())
                jpg.paste(new, mask=new.split()[3]) # 3 is the alpha channel
                jpg.save('home/gothos/Downloads/testPic/'+request.user.username+'.jpg','JPEG')
            return HttpResponse(1)
        return HttpResponse('notValid')
        
        
        print("NOTVALID")
    return HttpResponse('notPostorAjax')

def finish_cropping(request):
    if request.method == 'POST' and request.is_ajax():
        dic = request.POST.get('dic')
        dic = eval(dic)
        a = dic['border-width'].split(' ')
        
        for i in range(len(a)):
            a[i] = int(a[i].strip('px'))
        dic['border-width'] = a
        #dic['top'] = int(dic['top'].strip('px'))
        #dic['left'] = int(dic['left'].strip('px'))
        dic['width'] = int(dic['width'].strip('px'))
        dic['height'] = int(dic['height'].strip('px'))
        print('dic',dic)
        
        import PIL
        import Image
        im = Image.open('home/gothos/Downloads/testPic/'+request.user.username+'.jpg')
        w, h = im.size
        
        print('sirka',dic['width']+ dic['border-width'][1] + dic['border-width'][3],'w',w)
        tmp = im.crop((dic['border-width'][3],dic['border-width'][0],w-dic['border-width'][1],h-dic['border-width'][2])) #(from L,from T, from R, from B)
        if tmp.size[0] > 100 or tmp.size[0] > 100:
            tmp = tmp.resize((100,100), Image.ANTIALIAS)
        tmp.save('home/gothos/Downloads/testPic/'+request.user.username+'.jpg','JPEG')


        print('DIC',dic)
        return HttpResponse('OK')
        
        border-left:5px solid red
        
        $('#blah').attr('src', e.target.result);
        
        
        
        
        
        <html>
    <head>
        <script language='JavaScript' type='text/javascript' src='/wordBlog/adam/static/jquery-1.10.2.js'></script>
        <script type="text/javascript" src="/wordBlog/adam/static/jquery.cookie.js"></script>
        <script type="text/javascript" src="/wordBlog/adam/static/jquery.form.js"></script>
        <script type="text/javascript" src="/wordBlog/adam/static/jquery.Jcrop.js"></script>
        <script type="text/javascript" src="/wordBlog/adam/static/jquery.resizecrop.js"></script>
        <script type="text/javascript" src="/wordBlog/adam/static/jquery.imgareaselect.js"></script>
        <link rel='stylesheet' type='text/css' href='/wordBlog/adam/static/adam/style.css'>
        <link rel='stylesheet' type='text/css' href='/wordBlog/adam/static/adam/imgareaselect-animated.css'>
        <script>
            $( document ).ready(function(){
                jQuery.ajaxSetup({
            // Disable caching of AJAX responses 
                    cache: false
                });
                $.file = new Object();

                var options = { 
                        target: function(){}, 
                        beforeSubmit: function(){
                             $.file.type= ($("#id_picture")[0].files[0].type).split('\/')[1]
                             alert($.file.type)
                             if ($.inArray($.file.type,['jpg','jpeg','png']) == -1){
                                alert('wrong file format')
                                return false
                             }
                             

                        },
                        uploadProgress: OnProgress, //upload progress callback 
                        success: function(msg){
                            
                            if (msg == 1){
                                
                                $('#output').append('<img id ="cropBox" src="{{ MEDIA_URL }}{{ user.username }}.jpg">')
                                $('#blah').load(function(){
                                    // stuff
                                d = new Date();
                                }).removeAttr('src').attr('src', '/home/gothos/Downloads/testPic/cda70d1d482cff11caa4571cf9a82fe7.jpg');
                            }
                            
                        },
                        resetForm: true  
                };
            
            
                function OnProgress(event, position, total, percentComplete)
                {
                    //Progress bar
                    $('#progressbar').css('width',(percentComplete + '%')) //update progressbar percent complete
                    
                    $('#statustxt').text(percentComplete + '%'); //update status text
                    if(percentComplete>50)
                        {
                            $('#statustxt').css('color','#fff'); //change status text to white after 50%
                        }
                }
            
            
                $('#saveImage').click(function(){
                    $('#uplInput').attr('value',$.cookie('csrftoken'))
                    $('#saveImageForm').ajaxSubmit(options);
                    return false;
                })   
             
            
            
             $.fn.getFileSize = function(fileid){
                alert($.file.type)
                
                 try {
                 var fileSize = 0;

                 //http://www.dotnet-tricks.com/Tutorial/jquery/HHLN180712-Get-file-size-before-upload-using-jquery.html
                 fileSize = $("#" + fileid)[0].files[0].size
                 a = $("#" + fileid)[0].files[0].type
                 alert(a) //size in kb
                 fileSize = fileSize / 1048576; //size in mb 
                 alert(fileSize)
                 
                 
                 
                 var reader = new FileReader();

                reader.onload = function (e) {
                    
                    $('#blah').attr('src', e.target.result);
                    
                }

                reader.readAsDataURL($("#" + fileid)[0].files[0]);
                 
                 
                 
                 }
                 catch (e) {
                 alert("Error is :" + e);
                 }
             }    
            
            
            $('#size').bind('click', function() {
                
              //this.files[0].size gets the size of your file.
              $.fn.getFileSize('id_picture')
              
                
                
                
              });
              
  
                
            $('#crop').click(function(){
                $('#cropBox').imgAreaSelect({ aspectRatio: '1:1', minWidth:100,minHeight:100,handles: true });
            })
            $('#Fcrop').click(function(){
                $('#fCropToken').attr('value',$.cookie('csrftoken'))
                var dic = {}
                dic['border-width'] = $('#outer').css('border-width')
                dic['top'] = $('#selection').css('top')
                dic['left'] = $('#selection').css('left')
                dic['width'] = $('#selection').css('width')
                dic['height'] = $('#selection').css('height')
                dic = JSON.stringify(dic)
                $('#fCropInput').attr('value',dic)
                
                

                var frm = $('#finishCroppingForm')
                $.ajax({
                    type: frm.attr('method'),
                    url: frm.attr('action'),
                    data: frm.serialize(),
                    beforeSend: function(){

                    },
                    cache: false,
                              
                    success: function (msg) {
                        alert(msg)
                        
                        

                        
                        
                                     
                    },
                    error: function(msg) {
                    alert('error')
                    },
                    complete:function(msg){
                        
                        
                    },
                }).done(function(){

                
                })      
                
                
                
                
                
                
            })
            $('#cropA').click(function(){
                $('#cropAToken').attr('value',$.cookie('csrftoken'))
                var frm = $('#cropAForm')
                $.ajax({
                    type: frm.attr('method'),
                    url: frm.attr('action'),
                    data: frm.serialize(),
                    beforeSend: function(){

                    },
                    cache: false,
                              
                    success: function (msg) {
                        alert(msg)
                        
                        

                        
                        
                                     
                    },
                    error: function(msg) {
                    alert('error')
                    },
                    complete:function(msg){
                        
                        
                    },
                }).done(function(){

                
                }) 
            })
            

                 
            
            
            
        })
            
        
        </script>
    </head>
    <body>
        
        <input id ='saveImage' type='button' class='s'  value='Save'>
        <form enctype='multipart/form-data' id ='saveImageForm' action='/app/adam/saveImage/' method='post' >
            <input style='display:none' name='csrfmiddlewaretoken' value='' id ='uplInput'>
            {{ form.picture }}
            
        </form>
        <div id="progressbox" style="display:inline-block;"><div id="progressbar"></div ><div id="statustxt">0%</div></div>
        <div id='output'></div>
        <input id ='crop' type='button' class='s'  value='startCrop'>
        <input id ='Fcrop' type='button' class='s'  value='finishCrop'>
        <input id ='size' type='button' class='s'  value='getSize' style='display:block'>
        <img id ='blah' src=''>
        <form id ='finishCroppingForm' action='/app/adam/finishCropping/' method='post' >
            <input style='display:none' name='csrfmiddlewaretoken' value='' id ='fCropToken'>
            <input style='display:none' name='dic' value='' id ='fCropInput'>
            
        </form>
        <input style='display:block' type='button' value='cropAutomatically' id ='cropA'>
        <form id ='cropAForm' action='/app/adam/cropA/' method='post' >
            <input style='display:none' name='csrfmiddlewaretoken' value='' id ='cropAToken'>

            
        </form>
    </body>
</html>
            
   addon[i++] = "<input style='display: none;' type='text' id='isHumanComment"+id+"'>";
   $('#cropBox').imgAreaSelect({ aspectRatio: '1:1', minWidth:100,minHeight:100,handles: true });
                                $('#selection').css('width','100')
                                $('#selection').css('height','100')
                                $('#outer').css('border-style','solid')
                                $('#outer').css('border-width','50 50 50 50')
                                $('#outer').css('width','100')
                                $('#outer').css('height','100')
                                
                                
             $.fn.getFileSize = function(fileid){
                alert($.file.type)
                
                 try {
                 var fileSize = 0;

                 //http://www.dotnet-tricks.com/Tutorial/jquery/HHLN180712-Get-file-size-before-upload-using-jquery.html
                 fileSize = $("#" + fileid)[0].files[0].size
                 a = $("#" + fileid)[0].files[0].type
                 alert(a) //size in kb
                 fileSize = fileSize / 1048576; //size in mb 
                 alert(fileSize)
                 
                 
                 
                 var reader = new FileReader();

                reader.onload = function (e) {
                    
                    $('#blah').attr('src', e.target.result);
                    
                }

                reader.readAsDataURL($("#" + fileid)[0].files[0]);
                 
                 
                 
                 }
                 catch (e) {
                 alert("Error is :" + e);
                 }
             }    
            
            
            $('#size').bind('click', function() {
                
              //this.files[0].size gets the size of your file.
              $.fn.getFileSize('id_picture')
              
                
                
                
              });
        $('#Fcrop').click(function(){
        
        
        but.prop("disabled",false);
            but.removeClass('disabled')
            but.addClass('s')
            
            
            
            var reader = new FileReader();
                    try {
                    reader.onload = function (e) {
                        
                        $('#blah').attr('src', e.target.result);
                        
                    }

                    reader.readAsDataURL($("#id_picture")[0].files[0]);
                    }catch(e){
                        alert('err'+e)
                    }
            <input id ='saveImage' type='button' class='s'  value='Save'>
            
                border-style:solid;
    border-width:50px 50px 50px 50px;
    width:100px;
    height:100px;
    
    alert($("#id_picture")[0].files[0].width)
    $('#Fcrop').css('display','none')
                        $('#cor').css('display','block')
                        
                        
                        
                        
                        
                        
// If nothing's selected, start with a tiny area in the center
                //if (!ias.getSelection().width)
                    //ias.setOptions({ show: true, x1: 199, y1: 149, x2: 200, y2: 150 });
                ias.animateSelection(100, 75, 300, 225, 'slow');
                $.fn.fCropEnable(1)
                $('#trian4').attr('src','/static/is.jpg')
                
                var height = ( this.width / 16 ) * 9;
                if( height <= this.height ){     
                        var diff = ( this.height - height ) / 2;
                        var coords = { x1 : 0, y1 : diff, x2 : this.width, y2 : height + diff };
                }   
                else{ // if new height out of bounds, scale width instead
                        var width = ( this.height / 9 ) * 16; 
                        var diff = ( this.width - width ) / 2;
                        var coords = { x1 : diff, y1 : 0, x2 : width + diff, y2: this.height };
                }
                $.file.width = 0
                $.file.height = 0
                
                
                
                var awidth = $.file.width 
                var aheight = $.file.height
                var k = Math.min.apply(Math, [$.file.width,$.file.height])
                var height = k
                var width = k
                if( height <= aheight ){     
                        var diff = ( aheight - height ) / 2;
                        var coords = { x1 : 0, y1 : diff, x2 : awidth, y2 : height + diff };
                }   
                else{ // if new height out of bounds, scale width instead
                         
                        var diff = ( awidth - width ) / 2;
                        var coords = { x1 : diff, y1 : 0, x2 : width + diff, y2: aheight };
                }
                if (!ias.getSelection().width)
                    ias.setOptions( coords );
                ias.animateSelection(100, 75, 300, 225, 'slow')
                $.fn.fCropEnable(1)
                $('#trian4').attr('src','/static/is.jpg')
                
                
                var awidth = $.file.width 
                var aheight = $.file.height
                var k = Math.min.apply(Math, [$.file.width,$.file.height])
                var height = 100
                var width = 100
                if( height <= aheight ){     
                        var diff = ( aheight - height ) / 2;
                        var coords = { x1 : 0, y1 : diff, x2 : awidth, y2 : height + diff };
                }   
                else{ // if new height out of bounds, scale width instead
                         
                        var diff = ( awidth - width ) / 2;
                        var coords = { x1 : diff, y1 : 0, x2 : width + diff, y2: aheight };
                }

                ias.animateSelection(coords['x1'], coords['y1'], coords['x2'], coords['y2'], 'slow')
                $.fn.fCropEnable(1)
                $('#trian4').attr('src','/static/is.jpg')
1.jak moc je to ploske na vysku
2.jak moc je to ploske na sirku, cim vic ty je to vic ploske
 3.sirka
 4.vyska
 400x274
 175 137.5 225 87.5
 
 //var aspectRatio = $.file.width/$.file.height
 
 
 
                     if (parseInt($('#stuff').attr('value')) != idTopic){
                        
                        $('#stuff').load('/app/adam/openTopic/domain/'+idTopic+'',function(){
                        $('#stuff').attr('value',idTopic)
                        
                        
                        })
                    }
                    $('#morePostsButton').click()
                    setTimeout(function(){$('#post'+idPost+'').scrollTo(500)}, 1000)
                    
                    

def give_me_the_one(request):
    if request.method == 'POST' and request.is_ajax():
        idComment = int(request.POST.get('idComment'))
        comment=BlogComment.objects.get(pk=idComment)
        
        dic = {}
        
        if comment.idParentComment == None:
            #dic['post/comment'] = 1
            post=BlogPost.objects.get(pk=comment.idPost.id)
            dic['body'] = post.body
            dic['timestamp'] = post.timestamp
            person = User.objects.get(pk=comment.idPerson.id)
            dic['personName'] = person.nickname
            dic['personUsername'] = person.username
            
            dic['comment'] = {'comment':comment.comment,'personName':person.nickname,'personUsername':person.username,'timestamp':comment.timestampCom} 
        else:
            parent=BlogComment.objects.get(pk=comment.idParentComment)
            dic['comment']= parent.comment
            dic['timestampCom'] = parent.timestampCom
            person = User.objects.get(pk=parent.idPerson.id)
            dic['comment'] = {'comment':comment.comment,'personName':person.nickname,'personUsername':person.username,'timestamp':comment.timestampCom}
            
             addon[i++] = "<form id ='delNotifsForm' action='/app/adam/delNotifs/' method='post'>"
                            addon[i++] = "<input style='display:none' name='csrfmiddlewaretoken' value='' id ='delNotifsInput'>";
                        addon[i++] = "</form>"

addon[i++] = "<form id ='delNotifsForm"+id+"' action='/app/adam/delNotifs/' method='post'>"
                                addon[i++] = "<input style='display:none' name='csrfmiddlewaretoken' value='' id ='delNotifsInput"+id+"'>";
                                addon[i++] = "<input style='display:none' name='idcko' value='"+id+"'>";
                            addon[i++] = "</form>"
                            
                            
                            
    
    

if posts:
            data = serializers.serialize("python", posts)
            for i in range(len(data)):
                del data[i]['model'] 
                for k in data[i].keys():
                    
                    if k == 'fields':
                        person=User.objects.get(pk= data[i][k]['idPerson'])
                        data[i][k].update({'personName':person.nickname,'personUsername':person.username,'isPicture':person.isPicture})
                        dic[data[i]['pk']] = 0
                        likeds = Like.objects.filter(idPost = data[i]['pk'],valid=1)
                        likedsIDs = []
                        for z in likeds:
                            likedsIDs.append(z.idPerson.id)
                        #print('likedsIDs',likedsIDs)
                        if idUser == data[i][k]['idPerson']:
                            data[i][k].update({'canRemove':1})
                        else:
                            data[i][k].update({'canRemove':0})
                        if idUser in likedsIDs:
                            data[i][k].update({'canLike':0})
                        else:
                            data[i][k].update({'canLike':1})            
                        data[i][k].update({'lenLikedsIDs':len(likedsIDs)})
                        

                        comments = BlogComment.objects.filter(idPost= data[i]['pk'],idParentComment=None,valid = 1)
                        data[i][k].update({'dic':len(comments)})
                        comments = comments[:2]
                        com = []
                        if comments:
                            for p in range(len(comments)):
                                dicken = {}
                                dicken.update({'pk':comments[p].id})
                                dicken.update({'comment':comments[p].comment})
                                dicken.update({'timestampCom':comments[p].timestampCom})
                                person = User.objects.get(pk= comments[p].idPerson.id)
                                dicken.update({'personName':person.nickname,'personUsername':person.username,'isPicture':person.isPicture})
                                likeds = LikeComment.objects.filter(idComment = comments[p].id,valid=1)
                                likedsIDs = []
                                for z in likeds:
                                    likedsIDs.append(z.idPerson.id)
                                
                                
                                if idUser == comments[p].idPerson.id:
                                    dicken.update({'canRemove':1})
                                else:
                                    dicken.update({'canRemove':0})
                                if idUser in likedsIDs:
                                    dicken.update({'canLike':0})
                                else:
                                    dicken.update({'canLike':1})
                                dicken.update({'idParentComment': comments[p].idParentComment })
                                #if comments[p].idParentComment != None:
                                dicken.update({'idPost': comments[p].idPost.id })    
                                dicken.update({'lenLikedsIDs':len(likedsIDs)})        
                                subcomments = BlogComment.objects.filter(idPost= comments[p].idPost,idParentComment = comments[p].id,valid = 1)
                                dicken.update({'dic':len(subcomments)})
                                com.append(dicken)
                                #print('com',com)
                        
                        data[i][k].update({'comments':com})
                        del data[i][k]['idPerson']
                        del data[i][k]['idTopic']
                        
                        
                        
                         $('#discussInput'+id+'').attr('value',$.cookie('csrftoken'))
                        
                        var frm = $('#discussForm'+id+'')
                        $.ajax({
                            type: frm.attr('method'),
                            url: frm.attr('action'),
                            data: frm.serialize(),
                            cache: false,                   
                            success: function (msg) {
                                alert(msg)
                                $('#stuff').load('/app/adam/openTopic/domain/'+num+'');
                            },
                            error:function(msg){
                            },
                        })
                        
                        
    
    
    
        {% if user.is_authenticated %}
            addon[i++] = "<div id = 'createPost'>"
                addon[i++] = "<div id='createPostFormDiv' style='display:block;'>"
                    addon[i++] = "<form id = 'createPostForm' action= '/app/adam/create/' name = 'inputField' method=post>{% csrf_token %}"
                        addon[i++]= "<input style='display: none;' name='currentTopic' value='{{ currentTopic }}'>"
                        addon[i++]= "<input style='display: none;' name='' value='' type='text' id='isHumanPost'>"
                        addon[i++]= "<br>"
                        addon[i++]= "<div>"
                        addon[i++]= "<div id='p' class='indata1' style=''>
                            addon[i++]= "{{ form.body }}"
                                
                        addon[i++]= "</div>"
                        addon[i++]= "<br>"
                        addon[i++]= "<div style=''>"
                            addon[i++]= "<div id='checkboxStatus' style='display:inline-block' >"
                                    
                                
                            addon[i++]= "</div>"
                            addon[i++]= "<div style='display:inline-block'>"
                                addon[i++]= "Charakter postu:"
                            addon[i++]= "</div>"
                            addon[i++]= "<div id='check' style='display:inline-block'>"
                                addon[i++]= "<input name='positive' type='checkbox' class='ch' >positive"
                                addon[i++]= "<input name='negative' type='checkbox' class='ch' >negative"
                                addon[i++]= "<input name='informative' type='checkbox' class='ch' >informative"
                            addon[i++]= "</div>"
                        addon[i++]= "</div>"
                        addon[i++]= "<div>"
                            addon[i++]= "<div id='textStatus' style='display:inline-block' >"
                            addon[i++]= "</div>"   
                            addon[i++]= "<div style='display:inline-block'>" 
                                addon[i++]= "<span id='postLength'>Napis <span id = 'morePostLength' style='display:none'>este</span>aspon<span id='numOfPostWords'>4</span>slova</span><span id='wordsPostLength'><span id='moreWordsPostLength'>este</span> aspon<span id = 'numOfWordsPostLength'>2</span> slova musia mat minimalne 3 pismena</span>" 
                            addon[i++]= "</div>"
                            
                        addon[i++]= "</div>"
                            
                    addon[i++]= "</div>"
                        
                    addon[i++]= "</form>"
                addon[i++]= "</div>"
                
                addon[i++]= "<div id='createPostButtonDiv'>"
                addon[i++]= "<br>"
                addon[i++]= "<input id ='createPostButton' type='button' class='disabled'  value='Post'>"
                addon[i++]= "</div>"
            addon[i++]= "</div>"
        {% endif %}

        
        addon[i++]= "<form action= '/app/adam/giveMePosts/' id = 'give_me_posts' name = 'give_me_posts' method=post>"
            addon[i++]= "<input style='display:none' name='csrfmiddlewaretoken' value='' id ='gInput'>"
            addon[i++]= "<input style='display: none;' name='currentTopic' value='{{ currentTopic }}'>"
            addon[i++]= "<input id = 'postsFrom' style='display: none;' name='from' value = 0 >"
            addon[i++]= "<input id = 'switcher' style='display: none;' name='switch' value = 0 >"
        addon[i++]= "</form>"
        
        addon[i++]= "<form action='/app/adam/displayMorePostsButton/' id = 'displayMorePostsButtonForm' name = 'more_posts' method=post>"
            addon[i++]= "<input style='display:none' name='csrfmiddlewaretoken' value='' id ='dInput'>"
            addon[i++]= "<input style='display: none;' name='currentTopic' value='{{ currentTopic }}'>"
            addon[i++]= "<input id = 'oldestPostId' style='display: none;' name='from' value= 0 >"
            addon[i++]= "<input id = 'switcherP' style='display: none;' name='switch' value = 0 >"
        addon[i++]= "</form>"
        
        
        
        
        
        
        addon[i++]= "<div id='buttonPanel'>"
        addon[i++]=    "<div id='newest' style='display:inline-block;cursor:pointer'>najnovsie"
        addon[i++]=    "</div>"
        addon[i++]=    "<div id='mostFavourite' style='display:inline-block;cursor:pointer'>najpopularnejsie"
        addon[i++]=    "</div>"
        addon[i++]=    "<div id='onlyPositive' style='display:inline-block;cursor:pointer'>pozitivne"
        addon[i++]=    "</div>"
        addon[i++]=    "<div id='onlyNegative' style='display:inline-block;cursor:pointer'>negativne"
        addon[i++]= "</div>"
            
        addon[i++]= "<div>
        

            addon[i++]= "<div id = 'content'>"
            addon[i++]= "</div>"
            addon[i++]= "<div>"
                addon[i++]= "<input id = 'morePostsButton' type='button' class='button gray'  value='More' style='display:none'>"
            addon[i++]= "</div>"
            addon[i++]= "<input style='display: none;' name="" value='adam' type='text' id='isHuman'>"
        addon[i++]= "</div>"
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
                    addon[i++] = "<div id = 'createPost'>"
                addon[i++] = "<div id='createPostFormDiv' style='display:block;'>"
                    addon[i++] = "<form id = 'createPostForm' action= '/app/adam/create/' name = 'inputField' method=post>{% csrf_token %}"
                        addon[i++]= "<input style='display: none;' name='currentTopic' value='{{ currentTopic }}'>"
                        addon[i++]= "<input style='display: none;' name='' value='' type='text' id='isHumanPost'>"
                        addon[i++]= "<br>"
                        addon[i++]= "<div>"
                            addon[i++]= "<div id='p' class='indata1' style=''>
                                addon[i++]= "{{ form.body }}"
                                
                            addon[i++]= "</div>"
                            addon[i++]= "<br>"
                            addon[i++]= "<div style=''>"
                                addon[i++]= "<div id='checkboxStatus' style='display:inline-block' >"
                                    
                                
                                addon[i++]= "</div>"
                                addon[i++]= "<div style='display:inline-block'>"
                                    addon[i++]= "Charakter postu:"
                                addon[i++]= "</div>"
                                addon[i++]= "<div id='check' style='display:inline-block'>"
                                    addon[i++]= "<input name='positive' type='checkbox' class='ch' >positive"
                                    addon[i++]= "<input name='negative' type='checkbox' class='ch' >negative"
                                    addon[i++]= "<input name='informative' type='checkbox' class='ch' >informative"
                                addon[i++]= "</div>"
                            addon[i++]= "</div>"
                            addon[i++]= "<div>"
                                addon[i++]= "<div id='textStatus' style='display:inline-block' >"
                                addon[i++]= "</div>"   
                                addon[i++]= "<div style='display:inline-block'>" 
                                    addon[i++]= "<span id='postLength'>Napis <span id = 'morePostLength' style='display:none'>este</span>aspon<span id='numOfPostWords'>4</span>slova</span><span id='wordsPostLength'><span id='moreWordsPostLength'>este</span> aspon<span id = 'numOfWordsPostLength'>2</span> slova musia mat minimalne 3 pismena</span>" 
                                addon[i++]= "</div>"
                            
                            addon[i++]= "</div>"
                            
                        addon[i++]= "</div>"
                        
                    addon[i++]= "</form>"
                addon[i++]= "</div>"
                
                addon[i++]= "<div id='createPostButtonDiv'>"
                addon[i++]= "<br>"
                addon[i++]= "<input id ='createPostButton' type='button' class='disabled'  value='Post'>"
                addon[i++]= "</div>"
            addon[i++]= "</div>"
            
            
            addon[k++] = "<form id ='discussForm"+data.notifs[i].pk+"' action='/app/adam/discuss/' method='post'>"
                                            addon[k++] = "<input style='display:none' name='csrfmiddlewaretoken' value='' id ='discussInput"+data.notifs[i].pk+"'>";
                                            addon[k++] = "<input style='display:none' name='idcko' value='"+data.notifs[i].idComment+"'>";
                                        addon[k++] = "</form>"
                                        
                                        
            $('#numOfNotifs').on('click',function(){
                                alert('zde')
                                if ($('#root').css('display') == 'block'){
                                    $('#root').css('display','none')
                                }else{
                                    $('#root').css('display','block')
                                }
                                

$.fn.addCaptchaHandler = function(){
    $('#ref').click(function(){
        alert('ref')
        
        var i = 0
        var addon = []
        addon[i++] = "<form id='refCaptcha' action = '/app/accounts/refreshCaptcha/' method='post'>"
            addon[i++] = "<input style='display:none' name='csrfmiddlewaretoken' value='' id ='captchaInput'>"
        addon[i++] = "</form>"
        $('#captchaInput').attr('value',$.cookie('csrftoken'))

        var frm = $('#sa')
       
        $.ajax({
            type: frm.attr('method'),
            url: frm.attr('action'),
            data: frm.serialize(),
            cache: false,
            beforeSend: function(){
                if ($.fn.loginCheck() == 0){
                    alert('nn')
                    return false;
                }
            },   
            success: function (msg) {
                alert(msg)
        
        $('#mainR').append(addon.join(''));
        
        
        $('#id_captcha_1').val('')
        $('#id_captcha_1').focus()
        $.getJSON( "/app/accounts/refreshCaptcha/",{}, function( data ) {
            $('#captchaImg').attr('src',data.img)
            $('#id_captcha_0').attr('value',data.key)
        
        })        
    })


}


addon[i++]= "<div>Captcha</div>"
                    addon[i++]= "<div id ='errCaptcha'></div>"
                    addon[i++]= '<div id ="captcha">'
                        addon[i++]= '{{ formCap }}'
                        addon[i++]= '<input id ="ref" type="submit" class = "" value="refreshCaptcha" >'
                    addon[i++]= '</div>'
                                
                            })


if (data.numOfNotifs > 0){
                        $('#numOfNotifs').text('+'+data.numOfNotifs)
                        $('#numOfNotifs').css('color','red')
                        $('#numOfNotifs').css('cursor','pointer')
                    
                                                
                        
                        
                    }


            <script type='text/javascript' > 
                $.globalVars = new Object();
                $.globalVars.interval
            </script>
            
            
            
            
                    jQuery.fn.extend(
    {
      scrollTo : function(speed, easing)
      {
        return this.each(function()
        {
          var targetOffset = $(this).offset().top;
          $('html,body').animate({scrollTop: targetOffset}, speed, easing);
        });
      }
    });
    
    
    
    
    
    
    $('#root').children().remove()
                for (var i = 0, len = data.notifs.length; i < len; i++){
                    var k = 0
                    var addon = []
                    
                    
                    
                    
                    
                    
                    addon[k++] = "<div id='notif"+data.notifs[i].pk+"' style='cursor:pointer;padding-top:10px'>"
                        addon[k++] = "<div id='' style='display:inline-block;padding-right:5px'>"
                    
                            addon[k++] = "<img height='35px' width='35px' id = 'photoNotif"+data.notifs[i].pk+"' src='/home/gothos/Downloads/testPic/"+data.notifs[i].personUsername+".jpg?"+Math.random()+"''>";
                        addon[k++] = "</div>"
                        addon[k++] = "<div class='' style='display:inline-block;vertical-align:top'>"
                            addon[k++] = "User "+data.notifs[i].personNickname+" commented your "
                            if (data.notifs[i].idParentComment == 0 ){
                                
                                var add = "post"
                            }else{
                                
                                var add = "comment"
                            }
                            addon[k++] = ""+add+" in topic "    
                            addon[k++] = data.notifs[i].topicName
                            addon[k++] = ": \""+data.notifs[i].text+"...\""
                            addon[k++] = "<form id='giveMeTheOneForm"+data.notifs[i].pk+"' method='post' action='/app/adam/giveMeTheOne/'>"
                             
                                addon[k++] = "<input name='csrfmiddlewaretoken' value='' id='csrfNotif"+data.notifs[i].pk+"' style='display:none'>"
                                addon[k++] = "<input name='idComment' value='"+data.notifs[i].idComment+"' id='csrfNotif"+data.notifs[i].pk+"' style='display:none'>"
                            addon[k++] = "</form>"
                            
                            
                            addon[k++] = "<form id ='delNotifsForm"+data.notifs[i].pk+"' action='/app/adam/delNotifs/' method='post'>"
                                addon[k++] = "<input style='display:none' name='csrfmiddlewaretoken' value='' id ='delNotifsInput"+data.notifs[i].pk+"'>";
                                addon[k++] = "<input style='display:none' name='idcko' value='"+data.notifs[i].pk+"'>";
                            addon[k++] = "</form>"
                            
                            
                            
                            addon[k++] = "<br>"
                            addon[k++] = "<div class='date' title="+data.notifs[i].timestampCom+" style='display:block;padding-left:0px;padding-top:5px'>"+data.notifs[i].timestampCom+"</div>";
                            
                        addon[k++] = "</div>"
                    addon[k++] = "</div>"
                    $('#root').prepend(addon.join(''))
                    jQuery("div.date").timeago();
                    handler(data.notifs[i].pk,data.notifs[i].idTopic,data.notifs[i].idPost,data.notifs[i].idComment,data.notifs[i].idParentComment)
                    
                    
                    
                    
                }
                // $.getJSON( "/app/accounts/password/reset/",{}, function( data ) {
               //     alert('ok')
               //
    
    
    if (beforeC > 0){
                        alert('heh')
                        //base[i++] =
                        base[i++] = "<input id = 'moreCommentsButtonPost"+pk+"' type='button' class='button gray'  value='' style = 'display:none;padding-left:76px;cursor:pointer'>"; 
                    }
                    
                    
                    if (afterC > 0){
                        alert('yeah')
                        //base[i++] =
                        base[i++] = "<input id = 'moreNewCommentsButtonPost"+pk+"' type='button' class='button gray'  value='' style = 'display:none;padding-left:76px;cursor:pointer'>"; 
                    }
                    
                    
                                    if (after == 1 ){
                    var selector = $('#moreNewCommentsButton'+add+id+'')
                    alert('moreAfter')
                    $.fn.more(afterC,selector,1)
                }
                
                
                $.fn.giveMeLastID = function(sign,old){
                var ids
                if ($.fn.countPosts() > 0){
                    var posts = $('#content').children()
                    var L = []
                    for (var i = 0, len = posts.length; i < len; i++){
                        if (posts[i].id[0] == 'p'){
                            L.push(posts[i].id.match(/[0-9 ]+/))
                            if (old == 1 && L.length == 1){
                                break
                            }
                            
                        }
                    }
                    if (old == 0){
                        $('#lifter').attr('value',0)
                        ids = L[L.length-1]
                    }else{
                        $('#lifter').attr('value',1)
                        ids = L[0]
                    }
                     
                    
                }else{
                    ids = 0
                }
                
                if (sign == 1){
                    $('#postsFrom').attr('value',ids)
                    
                }else{
                    $('#oldestPostId').attr('value',ids)
                }

                
            }
            
            
            if (sigil == 0){
                    var a = 0
                    var b = 1 
                }
                if (sigil == 1){
                    var a = 1
                    var b = 0
                }
                if (sigil == 2){
                    var a = 1
                    var b = 1
                }
                $.fn.displayMoreCommentsBut(flag,id,beforeC,afterC,b,a)
                
                
                
                
                var comments = $('#firstCDiv'+add+id+'').children()
                for (var i = 0, len = comments.length; i < len; i++){
                    
                    if (sign == 0 && parseInt(comments[i].id.match(/[0-9 ]+/)) < idcko && $.inArray(comments[i].id[0],list) != - 1){
                        var newComment = document.createElement('div');
                        newComment.setAttribute('id','comment'+idcko+'');
                        newComment.setAttribute('class','comment');
                        newComment.innerHTML = addon.slice(1,addon.length-2).join('');
                        alert('ins')
                        document.getElementById('firstCDiv'+add+id+'').insertBefore(newComment,comments[i]);
                        sign = 1
                        return false;
                            
                    }
                    
                    




var comments = $('#firstCDiv'+add+id+'').children()
                for (var i = 0, len = comments.length; i < len; i++){
                    
                    if (sign == 0 && parseInt(comments[i].id.match(/[0-9 ]+/)) < idcko && $.inArray(comments[i].id[0],list) != - 1){
                        var newComment = document.createElement('div');
                        newComment.setAttribute('id','comment'+idcko+'');
                        newComment.setAttribute('class','comment');
                        newComment.innerHTML = addon.slice(1,addon.length-2).join('');
                        alert('ins')
                        document.getElementById('firstCDiv'+add+id+'').insertBefore(newComment,comments[i]);
                        sign = 1
                        return false;
                            
                    }
                
                
                    
                    
                    
                    

                }
        
        
        if (data.isAuthenticated == 1){
                $('#authU').css('display','block')
            }else{
                $('#authL').css('display','block')
            }
            
            



$('#login').css('display','none')
                                $('#user').text('')
                                $('#user').append("User: "+data.user+"")
                                $('#authU').css('display','block')
                                $('#authL').css('display','none')
                                var num = parseInt($('#stuff').attr('value'))
                                if (num != 0){
                                    $('#stuff').load('/app/adam/openTopic/domain/'+num+'');
                                }
                                $('#topics').unmask();
                                $('#stuff').unmask();
                                $('#main').css('opacity','1.0') 
                                $('#authent').text('')
                                $('#authent').removeClass("")
                                if (data.isPicture == true){
                                    $('#photo').attr('src','/home/gothos/Downloads/testPic/'+data.username+'.jpg?'+Math.random()+'')
                                }
                                checkForNotifs()
    


else:
            posts = BlogPost.objects.filter(idTopic=idTopic)
            
            k=0
            m=0
            for p in posts:
                if p.id < post.id:
                    k = k + 1
                if p.id > post.id:
                    m = m + 1
            dic['pk'] = post.id
            dic['beforePost'] = k
            dic['afterPost'] = m
            dic['coreText'] = post.body
            dic['timestamp'] = post.timestamp
            person = User.objects.get(pk=post.idPerson.id)
            dic['isPicture'] = person.isPicture
            dic['character'] = post.character
            likeds = Like.objects.filter(idPost = post.id,valid=1)
            likedsIDs = []
            for z in likeds:
                likedsIDs.append(z.idPerson.id)
            if idUser == post.idPerson.id:
                dic.update({'canRemove':1})
            else:
                dic.update({'canRemove':0})
            if idUser in likedsIDs:
                dic.update({'canLike':0})
            else:
                dic.update({'canLike':1})            
            dic.update({'lenLikedsIDs':len(likedsIDs)})
            comments = BlogComment.objects.filter(idPost= post.id,idParentComment=None,valid = 1)
            mar = comments
            print("LENIN",len(mar))
            dic.update({'dic':len(comments)})
            #'''
            
            #'''
            dic['personName'] = person.nickname
            dic['personUsername'] = person.username
            print('timestampCom',comment.timestampCom)
            
            
            '''
            parent=BlogComment.objects.get(pk=comment.idParentComment)
            
            
            person = User.objects.get(pk=parent.idPerson.id)
            dic['personName'] = person.nickname
            dic['personUsername'] = person.username
            dicken = {'pk':parent.pk,'comment':parent.comment,'personName':person.nickname,'personUsername':person.username,'timestampCom':parent.timestampCom,'isPicture': person.isPicture}
            #dic['coreText']= parent.comment
            #dic['timestamp'] = parent.timestampCom
            
            if idUser == parent.idPerson.id:
                dicken.update({'canRemove':1})
            else:
                dicken.update({'canRemove':0})
            likeds = LikeComment.objects.filter(idComment = comment.id,valid=1)
            likedsIDs = []
            for z in likeds:
                likedsIDs.append(z.idPerson.id)
                
            if idUser in likedsIDs:
                dicken.update({'canLike':0})
            else:
                dicken.update({'canLike':1})            
            dicken.update({'lenLikedsIDs':len(likedsIDs)})
            comments = BlogComment.objects.filter(idParentComment=comment.id,valid = 1)
            dicken.update({'dic':len(comments)})
            
                
                
            dic.update({'comments':[dicken]})
            '''
            i = 0
            temp = []
            dic['parents'] = []
            dic['comments'] = []
            L = [comment.id]
            q = [comment.id]
            a = comment.id
            #L = [comment.idParentComment]
            #q = [comment.idParentComment]
            while q:
                parCom= BlogComment.objects.filter(pk=q.pop(0),valid = 1)
                 
                
                if len(parCom) == 0:
                    print('breakedLen',L)
                    break
                
                
                parent = parCom[0]
                print('here')
                print('ss',parent.id)
            
                person = User.objects.get(pk=parent.idPerson.id)
                #dic['personName'] = person.nickname
                #dic['personUsername'] = person.username
                dicken = {'pk':parent.pk,'comment':parent.comment,'personName':person.nickname,'personUsername':person.username,'timestampCom':parent.timestampCom,'isPicture': person.isPicture,'idParentComment':parent.idParentComment}
                #dic['coreText']= parent.comment
                #dic['timestamp'] = parent.timestampCom
                
                if idUser == parent.idPerson.id:
                    dicken.update({'canRemove':1})
                else:
                    dicken.update({'canRemove':0})
                likeds = LikeComment.objects.filter(idComment = comment.id,valid=1)
                likedsIDs = []
                for z in likeds:
                    likedsIDs.append(z.idPerson.id)
                    
                if idUser in likedsIDs:
                    dicken.update({'canLike':0})
                else:
                    dicken.update({'canLike':1})            
                dicken.update({'lenLikedsIDs':len(likedsIDs)})
                comments = BlogComment.objects.filter(idParentComment=parent.id,valid = 1)
                
                print('LENNN',len(comments))
                dicken.update({'dic':len(comments)})
                #if parent.idParentComment != None:
                #parId = parent.idParentComment
                #parComments = BlogComment.objects.filter(idParentComment=parent.id,valid = 1)
                #print('lenko',len(parComments))
                k=0
                m=0
                print('acko',a)
                for com in comments:
                    if com.id < a:
                        k = k + 1
                    if com.id > a:
                        m = m + 1    
                dicken['beforeComment'] = k
                dicken['afterComment'] = m
                '''
                k=0
                m=0
                for com in comments:
                    if com.id < comment.id:
                        k = k + 1
                    if com.id > comment.id:
                        m = m + 1    
                dicken['beforeComment'] = k
                dicken['afterComment'] = m
                #dicken['personName'] = person.nickname
                #dicken['personUsername'] = person.username
                #print('timestampCom',comment.timestampCom)
                '''
                
                
                if parCom[0].idParentComment != None:
                    superComment = BlogComment.objects.get(pk = parent.idParentComment,valid=1)
                    Re = {}
                    #dicken = {}     
                    Re.update({'text': superComment.comment[:35]})
                    personName = User.objects.get(pk = superComment.idPerson.id).nickname
                    Re.update({'inReplyToName': personName})
                    #Re.append(dicken)
                    dicken.update({'Re':Re})
                
                    
                temp.append(dicken)
                #dic['parents'].append(dicken)
                
                a=parCom[0].id
                if parCom[0].idParentComment == None:
                    print('breakedNone',L)
                    break
                    
                                
                q.append(parCom[0].idParentComment)
                L.append(parCom[0].idParentComment)
                
                print('LUKAS',L)
            print('TEMP0',temp)
            #if len(temp) > 1:
            #    temp = temp.reverse()
            
            
            #mur = temp[-1].id
            #print('mur',mur)
            k=0
            m=0
            
            for com in mar:
                if com.id < a:
                    k = k + 1
                if com.id > a:
                    m = m + 1    
            dic['beforeComment'] = k
            dic['afterComment'] = m
            temp = temp[::-1]
            
            
            
            #temp.append
            
            
            '''
            dicken = {'pk':comment.pk,'comment':comment.comment,'personName':author.nickname,'personUsername':author.username,'timestampCom':comment.timestampCom,'isPicture': author.isPicture}
            if idUser == comment.idPerson.id:
                dicken.update({'canRemove':1})
            else:
                dicken.update({'canRemove':0})
            likeds = LikeComment.objects.filter(idComment = comment.id,valid=1)
            likedsIDs = []
            for z in likeds:
                likedsIDs.append(z.idPerson.id)
                
            if idUser in likedsIDs:
                dicken.update({'canLike':0})
            else:
                dicken.update({'canLike':1})            
            dicken.update({'lenLikedsIDs':len(likedsIDs)})
            comments = BlogComment.objects.filter(idParentComment=comment.id,valid = 1)
            dicken.update({'dic':len(comments)})
            print('temp',temp)
            #temp.append(dicken)
            #a = temp[-1]['comments'] = dicken
            '''
            
                
            dic.update({'comments':temp})
            
            
            
            '''
            q = [idcko]
            while q:
                coms = BlogComment.objects.filter(idParentComment=q.pop(0),valid = 1)
                for com in coms:
                    com.valid = 0
                    com.timestamp = timestamp
                    q.append(com.id)
                    com.save()
                    likes = LikeComment.objects.filter(idComment=com.id,valid=1)
                    for i in likes:
                        i.valid = 0
                        i.timestamp = timestamp
                        i.save()
                        
            q = [parent.id]
            while q:
                parCom= BlogComment.objects.filter(pk=q.pop(0),valid = 1)
                q.append(parCom.idParentComment.id)
                
            '''
            
            
            
            #dic['comment'] = {'comment':comment.comment,'personName':author.nickname,'personUsername':author.username,'timestamp':comment.timestampCom}
            
            
            k = (num - 6)
                    if (k >= 6){
                        alert('vacsie')
                        m = 6
                    }else{
                        m = num
                    }
                    alert(m)

                        //addon[i++] = "<div style='display:inline-block;vertical-align:250%;padding-left:10px'>"
                        //    addon[i++] = data.email
                        //addon[i++] = "</div>"
                        
                        
                        
                                            //$('#notificationsDiv').click(function(e){
                    //    e.stopPropagation();
                    //})
                    
                    
                        $(window).click(function(){
        alert('ble')
        $('#root').children().remove()
    });
    
    
    $(this).on('click',function(){
                    alert('aaa')
                    
                    $('div[id^="topic"]').not(this).attr('cursor','crosshair');
                })
                
                
                
                
                if ($(this).is('[id^="topic"]')){
            $(this).click(function(){
                    
                var num = $(this).attr('value')
                
                if ($('#stuff').children().length > 0 ){
                    $('#stuff').children().remove()
                } 
                $('#stuff').load('/app/adam/openTopic/domain/'+num+'');
                $('#stuff').attr('value',num)
                
                $(this).unbind('click')
                alert('unbinded')
                    
                    
                    
                
                
                
            })
        
        }
        
        
        
        $.each($('#topics').children(),function(){
        
        
        $(this).click(function(){
                
            //alert('ha')
            var topicNum = $(this).attr('value')
            var stuffNum = $('#stuff').attr('value')
            if topicNum != stuffNum
                
                
                
            
            
            
        })
        
        
    
    })
    
    
    
    
    
                    $('#categoryNewest').click(function(){
                    $.fn.takeCareOfContent(0)     
                })

                $('#categoryMostFavourite').click(function(){
                    $.fn.takeCareOfContent(1)

                })
                $('#categoryOnlyPositive').click(function(){
                    $.fn.takeCareOfContent(2)

                })
                $('#categoryOnlyNegative').click(function(){
                    $.fn.takeCareOfContent(3)

                })
                
                
                
                
                                            addon[i++] = "<span id='CLength"+add+id+"'>Napis <span id = 'moreCLength"+add+id+"' style='display:none'>este</span>aspon<span id='numOfCWords"+add+id+"'>4</span>slova</span><span id='wordsCLength"+add+id+"'><span id='moreWordsCLength"+add+id+"'>este</span> aspon<span id = 'numOfWordsCLength"+add+id+"'>2</span> slova musia mat minimalne 3 pismena</span>"
                                            
                                            
                                            
<div style='margin-left:5px;vertical-align:50%;display:inline-block'>


div.close-btn2 {
    #top:0;
    #right:0;
    float:right;
    #position:absolute;
    #margin-top:-30px;
    #margin-right:-30px;
    cursor:pointer;
    color: #fff;
    border: 1px solid #AEAEAE;
    #border-radius: 30px;
    background: #605F61;
    font-size: 31px;
    font-weight: bold;
    display: inline-block;
    line-height: 0px;
    padding: 11px 3px;
    width:20px; 
    
}



$.fn.buildUpload = function(){
                var i = 0
                var addon = []
                addon[i++] = "<div>"
                    addon[i++] = "<form enctype='multipart/form-data' id ='saveImageForm' action='/app/adam/saveImage/' method='post' >"
                        addon[i++] = "<input style='display:none' name='csrfmiddlewaretoken' value='' id ='uplInput'>"
                    
                        addon[i++] = '{{ form.picture }}'
                    
                    addon[i++] = "</form>"
                    addon[i++] = "<div id='progressbox' style='display:inline-block;'>"
                        addon[i++] = "<div id='progressbar'>"
                        addon[i++] = "</div>"
                        addon[i++] = "<div id='statustxt'>"
                            addon[i++] = '0%'
                        addon[i++] = "</div>"
                    addon[i++] = "</div>"
                    addon[i++] = "<div id='picStatus'>"
                        addon[i++] = "<div><img id='trian1' src='{{ STATIC_URL }}triangle.jpg'><div style='display:inline-block'><span>Obrazok je v jednom z formatov JPG,JPEG,PNG</div></div>"
                        addon[i++] = "<div><img id='trian5' src='{{ STATIC_URL }}triangle.jpg'><div style='display:inline-block'>Obrazok ma rozmery aspon 50x50 pixelov</div></div>"
                        addon[i++] = "<div><img id='trian2' src='{{ STATIC_URL }}triangle.jpg'><div style='display:inline-block'>Velkost suboru je maximalne 1 MB</div></div>"
                        addon[i++] = "<div id='cor' style='display:none'><img id='trian3' src='{{ STATIC_URL }}wrong.jpg'><div style='display:inline-block'>Subor je poskodeny</div></div>"   
                    addon[i++] = "</div>"
                    addon[i++] = "<div id='output'>"
                    addon[i++] = "</div>"
                    addon[i++] = "<div style='display:none' id='square'><img id='trian4' src='{{ STATIC_URL }}triangle.jpg'><div style='display:inline-block'> Kliknutim na obrazok a pohybom kurzora ohranic svoj profilovy obrazok</div></div>"
                    addon[i++] = "<input id ='Fcrop' type='button' class='disabled'  value='Save' style='display:none' >"
                    
                    addon[i++] = "<form id ='finishCroppingForm' action='/app/adam/finishCropping/' method='post'>"
                        addon[i++] = "<input style='display:none' name='csrfmiddlewaretoken' value='' id ='fCropToken'>"
                        addon[i++] = "<input style='display:none' name='dic' value='' id ='fCropInput'>"
                        
                    addon[i++] = "</form>"
                    addon[i++] = "<input style='display:block' name='' value='but' id ='butt' type='button'>"
                addon[i++] = "</div>"
                $('#mainU').append(addon.join(''))
            }
        
        
        
        
            $( document ).ready(function(){
                $.fn.buildUpload()
                
                
                
                
                
                
                
                
                if fromPost == 0:
                    count = len(results) - len(L)
                    if count > 6:
                        k = 6
                else:
                    index = R.index(L[-1]) + 1
                    for r in R[index:]:
                        k = k + 1
                        if k == 6:
                            break
                            
                            
                            
                            
                            if ($('#firstCDiv'+add+id+'').children().length > 0){  
                                    $('#SCButtonText'+add+id+'').text('Skryť komentáre')
                                
                                
                                    alert('A')
                                    
                                    
                                    
                                    
                                }else{
                                    alert('B')
                                    
                                    
    
    
    
    
    if ($.fn.countNumOfComments(flag,id) > 0){
                                //alert(numOfComments)
                                //alert(add)
                                //alert(id)
                                    $('#SCButtonText'+add+id+'').text('Skryť komentáre')
                                
                                
                                    
                                    
                                }else{
                                    $('#SCButtonText'+add+id+'').text('Zobraziť komentáre')
                                    $('#SCAllCSpan'+add+id+'').text(numOfComments)
                                    
                                    
                                } 
                                
                                
                        var numOfAllC  = parseInt($('#SCAllCSpan'+add+id+'').attr('value'))
                        
                    

                    var numOfShownC = $.fn.countNumOfComments(flag,id);
                    

                    //if (numOfShownC  < numOfAllC ){
                    
                    
                    
                    
                    var numOfC = $.fn.countNumOfComments(flag,id)
                            if ( $('#SCButton'+add+id+'').css('display') == 'none' && sign == 1){
                                if ((flag == 1 && numOfC > 2 ) || (flag == 2 && numOfC > 0 )){
                                    $('#SCButton'+add+id+'').css('display','inline')
                                    $('#SCNumDiv'+add+id+'').css('display','none')
                                    $('#SCButtonText'+add+id+'').text('Skryť komentáre')
                                }                 
                                return false;
                            }else{
                                if (sign == 1 && ((flag == 1 && numOfC > 2 ) || (flag == 2 && numOfC > 0 )) ){                     
                                    return false;
                                }
                            }
                            
                            
                            
    
                kwargs['error_messages'].update({'invalid': ugettext_lazy(('Znaky na obrázku sú nesprávne opísané.Skúste to prosím znova.').decode("utf-8"))})

        kwargs['widget'] = kwargs.pop('widget', CaptchaTextInput(output_format=kwargs.pop('output_format', None)))

        super(CaptchaField, self).__init__(fields, *args, **kwargs)

    def compress(self, data_list):
        if data_list:
            return ','.join(data_list)
        return None

    def clean(self, value):
        super(CaptchaField, self).clean(value)
        response, value[1] = (value[1] or '').strip().lower(), ''
        CaptchaStore.remove_expired()
        if settings.CAPTCHA_TEST_MODE and response.lower() == 'passed':
            # automatically pass the test
            try:
                # try to delete the captcha based on its hash
                CaptchaStore.objects.get(hashkey=value[0]).delete()
            except CaptchaStore.DoesNotExist:
                # ignore errors
                pass
        elif not self.required and not response:
            pass
        else:
            try:
                CaptchaStore.objects.get(response=response, hashkey=value[0], expiration__gt=get_safe_now()).delete()
            except CaptchaStore.DoesNotExist:
                raise ValidationError(getattr(self, 'error_messages', {}).get('invalid', ugettext_lazy(('Znaky na obrázku sú nesprávne opísané.Skúste to prosím znova.').decode("utf-8")))
        return value
        
        
        
        
        
        var req
            var item1
            var item2
            var ok1
            var ok2
            if ($('#id_password1').css('display') != 'none'){
                value = ($.trim( $('#id_password1').val())).length
                req = 1
            }else{
                value = ($.trim($('input[class="spwd1"]').val())).length
                req = 0
            }
            $('input[class="spwd1"]').qtip('destroy')
            $('#id_password1').qtip('destroy')
            $('#id_password1').css('border-color','initial')
            $('input[class="spwd1"]').css('border-color','initial')
            
            
           
                
            if (value === 0){

                $('#id_password1').qtip({
                    content:{text:'Toto pole nesmie zostať prázdne.'},
                    style:{tip:true},
                            
                });
                $('input[class="spwd1"]').qtip({
                    content:{text:'Toto pole nesmie zostať prázdne.'},
                    style:{tip:true},
                            
                });
                
                
                
                $('input[class="spwd1"]').css('border-color','red')
                $('#id_password1').css('border-color','red')
                
                
                flag = 1
            }else{
                if (req == 1){
                   item1 = $.trim($('#id_password1').val())
                }else{
                   item1 = $.trim($('input[class="spwd1"]').val())
                }
                if(/[\S]{6,}/g.test(item1) == false){
                    
                    $('#id_password1').qtip({
                        content:{text:'Heslo musí obsahovať aspoň 6 znakov (bez medzier)'},
                        style:{tip:true},
                            
                    });
                    $('input[class="spwd1"]').qtip({
                        content:{text:'Heslo musí obsahovať aspoň 6 znakov (bez medzier)'},
                        style:{tip:true},
                            
                    });
                    
                    
                    $('input[class="spwd1"]').css('border-color','red')
                    $('#id_password1').css('border-color','red')
                    
                    flag = 1
                }else{
                    ok1 = 1
                }
            }
            
            

            if ($('#id_password2').css('display') != 'none'){
                value = ($.trim( $('#id_password2').val())).length
                req = 1
            }else{
                value = ($.trim($('input[class="spwd2"]').val())).length
                req = 0
            }
            $('input[class="spwd2"]').qtip('destroy')
            $('#id_password2').qtip('destroy')
            $('#id_password2').css('border-color','initial')
            $('input[class="spwd2"]').css('border-color','initial')
           
                
            if (value === 0){
                $('#id_password2').qtip({
                    content:{text:'Toto pole nesmie zostať prázdne.'},
                    style:{tip:true},
                            
                });
                $('input[class="spwd2"]').qtip({
                    content:{text:'Toto pole nesmie zostať prázdne.'},
                    style:{tip:true},
                            
                });
                $('input[class="spwd2"]').css('border-color','red')
                $('#id_password2').css('border-color','red')
                flag = 1
            }else{
                if (req == 1){
                   item2 = $.trim($('#id_password2').val())
                }else{
                   item2 = $.trim($('input[class="spwd2"]').val())
                }
                if(/[\S]{6,}/g.test(item2) == false){
                    $('#id_password2').qtip({
                        content:{text:'Heslo musí obsahovať aspoň 6 znakov (bez medzier)'},
                        style:{tip:true},
                            
                    });
                    $('input[class="spwd2"]').qtip({
                        content:{text:'Heslo musí obsahovať aspoň 6 znakov (bez medzier)'},
                        style:{tip:true},
                            
                    });
                    
                    $('input[class="spwd2"]').css('border-color','red')
                    $('#id_password2').css('border-color','red')
                    flag = 1
                }else{
                    ok2 = 1
                }
            }
            
            
            
                                        addon[i++] = "<div style='display:block'>"
                                addon[i++] = '<div style="display:inline-block;float:left">'
                                    addon[i++] = "<input name='remember_me' type='checkbox'>Prihlásiť trvale"
                                addon[i++] = '</div>'
                                addon[i++] = "<div style='display:inline-block;float:right'>"
                                    addon[i++] = "<input id ='sub' type='button' class = 's' value='Prihlásiť sa' style='cursor:pointer;width:auto;padding-left:10px;padding-right:10px'>"
                                addon[i++] = "</div>"
                            addon[i++] = "</div>"
                            
                            
                            addon[i++] = "<div id='passwordForget' style='cursor:pointer;color:#0404B4;display:block'>"
                                addon[i++] = "<u>Zabudol si heslo</u>?"
                            addon[i++] = "</div>"
                            addon[i++] = "<div id ='showCaptcha' style='margin-top:12px;'>"
                            addon[i++] = "</div>"
                            
                            
                            
            
            
            
            
                            
                            
                            
                           
                            
                            
                            
                            
                            
                            
                            
                            

                            
                            
                            
                            
                            
                            addon[i++] = '<td valign="middle" id="innerDiv" style="">'
                                        addon[i++] = "<input name='remember_me' id='remember_me' type='checkbox' style='width:16px;height:16px' >Prihlásiť trvale"
                                    addon[i++] = '</td>'
                                    
                                    
                                    
                            
                            
                                                            addon[i++] = '<tr>'
                                    addon[i++] = '<td valign="middle" id="innerDiv" style="">'
                                        addon[i++] = "<div id='passwordForget' style='cursor:pointer;color:#2895f1;'>"
                                            addon[i++] = "Zabudol si heslo?"
                                        addon[i++] = "</div>"
                                    addon[i++] = '</td>'
                                addon[i++] = '</tr>'
                                
                                
                                
                                                        addon[i++]= '<div style="display:inline-block;margin-right:28px">'
                            addon[i++]= 'Rok narodenia'
                        addon[i++]= '</div>'
                        addon[i++]= '<div style="display:inline-block">'
                            addon[i++]= '{{ form.yearOfBirth }}'
                        addon[i++]= '</div>'
                    addon[i++]= '</div>'
                    
                    
                                            addon[i++] = '<table id="outerDiv" cellpadding="0" cellspacing="0" border="0" style="margin-top:15px;margin-bottom:15px">'
                            addon[i++] = '<tr>'
                                addon[i++] = '<td valign="middle" id="innerDiv" style="">'
                                   addon[i++]= "<input name='tos' type='checkbox' style='width:16px;height:16px'>"
                                addon[i++] = '</td>'
                                addon[i++] = '<td valign="middle" id="innerDiv" style="">'
                                    addon[i++]= "<div style=''>"
                                        addon[i++]= "Súhlasím s "
                                        addon[i++]= "<span id='terms' class='tyrkys' style='display:inline-block;cursor:pointer;'>"
                                            addon[i++]= "podmienkami užívania"
                                        addon[i++]= "</span>"
                                    addon[i++]= "</div>"
                                addon[i++] = '</td>'
                                addon[i++] = '<td valign="middle" style="padding-left:15px" id="inneDiv">'
                                    addon[i++]= "<input id ='reg' type='submit' class = 's' value='Registrovať' style='cursor:pointer;width:auto;padding-left:10px;padding-right:10px;'>"

                                addon[i++] = '</td>'
                            addon[i++] = '</tr>'
                        addon[i++] = '</table>'
                        
                        
                        
                        input{
    -webkit-rtl-ordering: logical;
    -webkit-user-select: text;
    cursor: auto;
}
input,textarea{
    margin: 0em;
    font: -webkit-small-control;
    color: initial;
    letter-spacing: normal;
    word-spacing: normal;
    text-transform: none;
    text-indent: 0px;
    text-shadow: none;
    display: inline-block;
    text-align: start;
    -webkit-writing-mode: horizontal-tb;
}



            $.fn.hideSpan = function(el,span){
                alert('ev')
                alert(el.val())
                el.val('sdada')
                if (el.val().length != 0){
                    span.hide()
                    alert('neni')
                }else{
                    span.show()
                    alert('je')
                }
            
            
            }
            
            
            
            $('a[class="pwd1"]').addClass('tyrkys')
            $('a[class="pwd2"]').addClass('tyrkys')
            var divs = ['id_username','id_email','id_password1','id_password2','idP1','idP2']
            var names = ['usrSpan','emailSpan','password1Span','password2Span','password1Span','password2Span']
            for (var i = 0, len= divs.length; i < len; i += 1) {
                //alert('a')
                var el = $('#'+divs[i]+'')
                var span = $('#'+names[i]+'')
                el.on('change keyup paste',function(){
                
                    
                $.fn.hideSpan(el,span)
               })
                
                
                //var el = document.getElementById(divs[i])

                //el.setAttribute('style','height:20px;width:335px;font-size:16px;margin:5px;border:0px');
                //el.setAttribute('placeholder',names[i]);                 
            }
            
            
            
            
            
                        $('#id_username').on('change keyup paste',function(){
                
                    
                $.fn.hideSpan($(this),$('#usrSpan'))
            })
            $('#id_email').on('change keyup paste',function(){
                
                    
                $.fn.hideSpan($(this),$('#emailSpan'))
            })
            $('#id_password1').on('change keyup paste',function(){
                
                    
                $.fn.hideSpan($(this),$('#password1SPan'))
            })
            $('#id_password2').on('change keyup paste',function(){
                
                    
                $.fn.hideSpan($(this),$('#password2Span'))
            })
            $('#idP1').on('change keyup paste',function(){
                
                    
                $.fn.hideSpan($(this),$('#password1Span'))
            })
            $('#idP2').on('change keyup paste',function(){
                
                    
                $.fn.hideSpan($(this),$('#password2Span'))
            })
            
            
                alert('eaaa')
    var flag = 0
    if (num == 1){
        var input = $('#id_username')
        var errDiv = $('#errUsername')
    }
    if (num == 2){
        var errDiv = $('#errEmail')
        var input = $('#id_email')
    }

Your new password has been saved.


$('#hideDiv').click(function(){
                $('#authent').hide('slide', {direction: 'left'}, 1000);
                $.fn.addPicture(2,data.isPicture,data.username)
            })
            
            addon[i++] = "<div id='hideDiv' style='cursor:pointer;display:inline-block'>";
                        addon[i++] = "</div>";
                        
                        
                        
                        
$.fn.getUrlVars = function(){

    var vars = [], hash;
    var hashes = window.location.href.slice(window.location.href.indexOf('?') + 1).split('&');
    for(var i = 0; i < hashes.length; i++)
    {
        hash = hashes[i].split('=');
        vars.push(hash[0]);
        vars[hash[0]] = hash[1];
    }
    return vars;
}


div.z{
    position: relative;
    width:400px;
    min-height:250px;
  #top: 50%;
  #left: 50%;
  margin-top: auto;
  margin-left: auto;
  margin-right: auto;
  margin-bottom: auto;
  z-index: 100;
  #overflow:auto;
  background-color:white;
  
  display:none;
  border:1px solid red
  
  -webkit-border-radius: 6px;
  -moz-border-radius: 6px;
  -ms-border-radius: 6px;
  -o-border-radius: 6px;
  border-radius: 6px;
}


    input.focusout(function(event){

        $.fn.changeOpacity(1,span)
        if (flag == 0){
            $.fn.checkPass(0,input,inputHid,errDiv)
        }
        if (flag > 0){
            var L = $.fn.checkPass(0,input,inputHid,errDiv)
            if (flag == 1){
                $.general.ok1 = L[1]
                $.general.item1 = L[2]
            }
            if (flag == 2){
                $.general.ok2 = L[1]
                $.general.item2 = L[2]
            }
            $.fn.checkEquality($.general.ok1,$.general.item1,$.general.ok2,$.general.item2,$('#id_password2'),$('#idP2'),$('errPassword2'))
        
        }
        
        
        
        input[type=checkbox]:checked:after{
	#content: '✔';
	content: '\2714';
	font-size: 25px;
	color: #99a1a7;
    position: absolute;
    top:0;
    bottom:0;
    z-index:500;
}




            $('#butt').click(function(){
                if ($.file.tmpHeight != $.file.height){
                    var height = $.file.tmpHeight
                }else{
                    var height = $.file.height
                }
                if ($.file.tmpWidth != $.file.width){
                    var width = $.file.tmpWidth
                }else{              
                    var width = $.file.width
                }
                var coorX1 = width/2 - 25
                var coorY1 = height/2 - 25
                var coorX2 = width/2 + 25
                var coorY2 = height/2 + 25
                
                alert(coorX1)
                alert(coorY1)
                alert(coorX2)
                alert(coorY2)
                var ias = $('#cropBox').imgAreaSelect({ fadeSpeed: 400, handles: true,x1: coorX1, y1: coorY1, x2: coorX2 , y2: coorY2,
                instance: true });
                
                
                //If nothing's selected, start with a tiny area in the center
                //if (!ias.getSelection().width)
                //    ias.setOptions({ show: true, x1: 199, y1: 149, x2: 200, y2: 150 });
                
                //ias.animateSelection(0, 75, 300, 225, 'slow');
                $.fn.fCropEnable(1)
                $('#trian4').attr('src','/static/is.jpg')

                
            
            
                
            })




.jspContainer{overflow:hidden;position:relative;}
.jspPane{position:absolute;}
.jspVerticalBar{position:absolute;top:0;right:0;width:16px;height:100%;background:red;}
.jspHorizontalBar{position:absolute;bottom:0;left:0;width:100%;height:16px;background:red;}
.jspCap{display:none;}
.jspHorizontalBar .jspCap{float:left;}
.jspTrack{background:#dde;position:relative;}
.jspDrag{background:#bbd;position:relative;top:0;left:0;cursor:pointer;}
.jspHorizontalBar .jspTrack,
.jspHorizontalBar .jspDrag{float:left;height:100%;}
.jspArrow{background:#50506d;text-indent:-20000px;display:block;cursor:pointer;padding:0;margin:0;}
.jspArrow.jspDisabled{cursor:default;background:#80808d;}
.jspVerticalBar .jspArrow{height:16px;}
.jspHorizontalBar .jspArrow{width:16px;float:left;height:100%;}
.jspVerticalBar .jspArrow:focus{outline:none;}
.jspCorner{background:#eeeef4;float:left;height:100%;}
* html .jspCorner{margin:0 -3px 0 0;}




                base[i++] = "<div id='post"+pk+"' style='width:650px'>"
                    base[i++] = '<table id="outerDiv" cellpadding="0" cellspacing="0" border="0" style="width:100%">'
                    
                        base[i++] = "<tr>"
                            base[i++] = "<td style='vertical-align:top'>"
                                base[i++] = "<div id='charPost"+pk+"' style='height:50px;border-left:5px solid white;'></div>"
                            base[i++] = "</td>"
                            base[i++] = "<td style='vertical-align:top'>"
                                base[i++] = "<div id='photoPost"+pk+"' style=''></div>"
                            base[i++] = "</td>"
                            base[i++] = "<td style='vertical-align:top'>"
                                base[i++] = "<div class='' style=''>"
                                    base[i++] = "<div id='headerPost"+pk+"' class='' style='border:0px solid black'>";
                                        base[i++] = "<div id='usr"+pk+"' class='username blue' style='display:inline-block' >" +personName + "</div>";
                                        base[i++] = "<div class='date' title="+timestamp+" style='display:inline-block'>"+timestamp+"</div>";  
                                    base[i++] = "</div>";
                                    
                                    base[i++] = "<div style='margin-top:5px'>"
                                        base[i++] = "<div class='p' style='width:550px;word-wrap: break-word;' >"+ body +"</div>";                                
                                        base[i++] = "<div class='submenu submenu-buttons'>";
                                            base[i++] = "<table id='subButTablePost"+pk+"' class='submenu-buttons'>";
                                                base[i++] = "<tr>"
                                                base[i++] = "</tr>"
                                            base[i++] = "</table>"                               
                                        base[i++] = "</div>";
                                    base[i++] = "</div>"
                                base[i++] = "</div>";
                            base[i++] = "</td>"
                        base[i++] = "</tr>"
                    base[i++] = "</table>"
                    base[i++] = "<div id='placeUnderPostDiv"+pk+"' class='placeUnderPostDiv' style='padding-left:64px' >";
                    base[i++] = "</div>";
                    base[i++] = "<input id = 'moreCommentsButtonPost"+pk+"' type='button' class='button gray'  value='' style = 'display:none;padding-left:64px;cursor:pointer'>"; 
                base[i++] = "</div>";
                
                
                
                'placeholder':u'Zanechaj príspevok...',
                
                
                'placeholder':u'Zanechaj komentár...',
                
                
                
                
                
                dicken = {}
        for num in range(len(words)):
            dicken[num] = words[num].name
        if len(dicken) > 0:
            print('dicken',dicken)
            #return HttpResponse(L)
            return HttpResponse(json.dumps(dicken,cls=DjangoJSONEncoder))
        else:
            return HttpResponse(0)
            
            
            
            
            //$.gen.keyword = $.gen.keyword + 1
                            //var id = $.gen.keyword
                            //var value = $.trim($('#adKeyword').val())
                            var i = 0
                            var addon = []
                            addon[i++] = '<tr id="keyw'+id+'" style="margin-top:0px">'
                                addon[i++] = '<td class="addWord" style="width:60px;text-align:center">'
                                    addon[i++] = "<div style=';position:relative'>"
                                        addon[i++] = '<input type="checkbox">'
                                    addon[i++] = "</div>"
                                addon[i++] = '</td>'
                                addon[i++] = '<td class="addWord" style="width:350px;text-align:left">'
                                    addon[i++] = '<div id="keyword'+id+'">'
                                        addon[i++] = value
                                    addon[i++] = '</div>'
                                addon[i++] = '</td>'
                                addon[i++] = '<td class="addWord" style="padding-left:0px;width:90px;text-align:right">'
                                    addon[i++] = '2 Eur'
                                addon[i++] = '</td>'
                                addon[i++] = '<td class="addWord" style="padding-left:0px;width:140px;text-align:right">'
                                    addon[i++] = '4 Eur'
                                addon[i++] = '</td>'
                                addon[i++] = '<td class="addWord" style="padding-left:0px;width:45px;text-align:center">'
                                    addon[i++] = '<div id="editKeyword'+id+'" style="cursor:pointer">'
                                        addon[i++] = 'Edit'
                                    addon[i++] = '</div>'
                                addon[i++] = '</td>'
                                addon[i++] = '<td class="addWord" style="padding-left:0px;width:45px;text-align:center">'
                                    addon[i++] = '<div class="close-btn6" style="font-size:16px;float:none" id="closeBtnKeyword'+id+'">'
                                    addon[i++] = '</div>'
                                addon[i++] = '</td>'
                            addon[i++] = '</tr>'
                            
                            $('#chosenWords > tbody:last').append(addon.join(''))
                            
                            
                            
                            
                                                $('#editKeyword'+id+'').click(function(){
                        
                        $('#adKeyword').val($('#keyword'+id+'').text())
                        if ($("#saveKeyword"+id+"").length > 0){
                            $("#saveKeyword"+id+"").remove()
                        }
                        $('#butPanel').prepend('<input id="saveKeyword'+id+'" name="'+id+'" type="button" class="s" value="Uložiť zmeny" style="position:absolute;width:90px;right:320px">')
                        $("#saveKeyword"+id+"").click(function(){
                            var value = $.trim($('#adKeyword').val())
                            $('#keyword'+id+'').text(value)
                            $("#saveKeyword"+id+"").remove()
                            $('#adKeyword').val('')
                            $('#countAdKeywordSpan').text(35)
                        })
                    
                    })
                    $('#closeBtnKeyword'+id+'').click(function(){
                        $('#keyw'+id+'').remove()
                    })
                    
                    $('#adKeyword').val('')
                    $('#countAdKeywordSpan').text(35)
                    
                })
                
                
                var value = {{ z.status }}
                                                            var L = $.fn.giveMeStatus(value)
                                                            var status = L[0]
                                                            var actionButtonText = L[1] 
                                                            
                                                            
                                                                        $.fn.giveMeStatus(value){
                if (value == 1 ){
                    var status = $.gen.statusInactive
                    
                    var actionButtonText = $.gen.actionLaunch
                }
                if (value == 2 ){
                    var status = $.gen.statusActive
                    
                    var actionButtonText = $.gen.actionPause
                }
                if (value == 3 ){
                    var status = $.gen.statusPaused
                    
                    var actionButtonText = $.gen.actionContinue
                }
                return [status,actionButtonText]
            }
            
            
              //alert(row)
                   //iterate through rows
                   //rows would be accessed using the "row" variable assigned in the for loop
                   /*
                   for (var j = 1, col; col = row.cells[j]; j++) {
                        if (j == 4){
                            break;
                        }
                        //alert(col.innerHTML)
                        alert(col.firstChild.innerHTML)
                     //iterate through columns
                     //columns would be accessed using the "col" variable assigned in the for loop
                     
                   }
                   */
                   
                   
                   
                       addon[i++] = '<span>Cena za klik</span><span> (&#128)</span>'
                                                    addon[i++] = '</th>'
                                                    addon[i++] = '<th class="keyw addWord" style="width:160px;text-align:left;padding-bottom:10px;">'
                                                        addon[i++] = '<span>Cena za 1000 zobrazení</span><span> (&#128)</span>'
                                                        
                                                        
    
    
    
    var menus = [$('#menuCampaigns'),$('#menuBilling'),$('#menuCampaignOverview'),$('#menuStatistics'),$('#menuAddKeyword'),$('#menuAdDescription'),$('#menuBudget')]
                    
                    for (var k = 1,len = 8; k < len; k++){
                        if ($(this).attr('value') == 1){
                            if ($.gen.isBillingInfo == 1){
                                $('#billingInfoCompleteDiv').show()
                                $('#billingInfoMissingDiv').hide()
                            }else{
                                $('#billingInfoCompleteDiv').hide()
                                $('#billingInfoMissingDiv').show()
                            }
                        }
                        
                        if ($(this).attr('value') == k){
                            var selector = menus[k]
                        }
                        
                        
                    }



if ($.gen.numOfGroups > 0){
                                        var i = $.gen.numOfGroups - 1
                                    //for (var i = 0,len = $.gen.numOfGroups;i < len; i++){
                                        var rowCount = $('#campaigns'+i+' > tbody > tr').length;
                                        //if (rowCount == 9){
                                        if (rowCount == 2){
                                            alert('devina')
                                            var k = $.gen.numOfGroups
                                            if ($('#campaigns'+k+'').length == 0){
                                                alert('buil')
                                                var m = 0
                                                var addon = []
                                                addon[m++] = '<div id="campaignsGroup'+k+'" style="display:none" class="campaignsGroup" value="'+k+'">'
                                                    addon[m++] = '<table id="campaigns'+k+'" cellpadding="0" cellspacing="0" border="0" style=";position:relative;border: 0px double #ddd;">'
                                                        addon[m++] = $.fn.buildCampaignHeader().join('')
                                                        addon[m++] = '<tbody>'
                                                        addon[m++] = '</tbody>'
                                                    addon[m++] = '</table>'
                                                addon[m++] = '</div>'
                                                $('#campaignsDiv').append(addon.join(''))
                                                $.gen.numOfGroups = $.gen.numOfGroups + 1
                                                
                                                var m = 0
                                                var addon = []
                                                var c = k + 1
                                                addon[m++] = '<td>'
                                                    addon[m++] = '<div id="campaignsPage'+k+'" value="'+k+'" style="width:25px;text-align:center;cursor:pointer" class="pageNums">'
                                                        addon[m++] = c
                                                    addon[m++] = '</div>'
                                                addon[m++] = '</td>'
                                                $(addon.join('')).insertBefore($('#nextPageTd'))
                                                $.fn.addPageNumsHandler(2) 
                                            }



$.gen.totalSumOfCampaigns = p
                                            $.gen.firstCampaignInCurGroup = 1
                                            $.gen.numOfCampaignsInCurGroup = 2
                                            
var table = document.getElementById("chosenWords");
                L=[]
                for (var i = 1, row; row = table.rows[i]; i++) {
                    
                    L.push(row.cells[1].firstChild.innerHTML)    
                }


$.gen.defaultList = []
                                $.gen.listSuccessRates = []
                                $.gen.dicOverviewStatistics = {}
                                
                                for (var i = 0,len=data.keyword.length;i<len;i++){

                                    var successRate = $.fn.buildOverviewRecord(data.keyword[i].idWord,data.keyword[i].name,data.keyword[i].uniqueSumOfViews,data.keyword[i].uniqueSumOfClicks)
                            
                                    
                                    $.fn.buildKeyword(data.keyword[i].idWord,data.keyword[i].name,data.keyword[i].cpm,data.keyword[i].cpc,2)
                                    
                                    var dic = {'idWord':data.keyword[i].idWord,'name':data.keyword[i].name,'uniqueSumOfClicks':data.keyword[i].uniqueSumOfClicks,'uniqueSumOfViews':data.keyword[i].uniqueSumOfViews}
                                    $.gen.defaultList.push(dic)
                                    if (!(successRate in $.gen.dicOverviewStatistics)){
                                        
                                        $.gen.dicOverviewStatistics[successRate] = [dic]
                                        $.gen.listSuccessRates.push(successRate)
                                    }else{
                                       
                                        $.gen.dicOverviewStatistics[successRate].push(dic)
                                        
                                        
                                    }




$('#cpcTable tbody > tr').remove()
                                
                                $.gen.defaultList2 = []
                                $.gen.listSuccessRates2 = []
                                $.gen.dicOverviewStatistics2 = {}
                                
                                
                                
                                for (var i = 0,len=data.length;i<len;i++){
                                    var successRate = $.fn.buildCPCRecord(data[i].date,data[i].avgCPC,data[i].uniqueCountOfClicksSum,data[i].uniqueCountOfViewsSum)
                                    
                                    var dic = {'date':data[i].date,'avgCPC':data[i].avgCPC,'uniqueSumOfViews':data[i].uniqueCountOfViewsSum,'uniqueSumOfClicks':data[i].uniqueCountOfClicksSum}
                                    $.gen.defaultList2.push(dic)
                                    if (!(successRate in $.gen.dicOverviewStatistics2)){
                                        
                                        $.gen.dicOverviewStatistics2[successRate] = [dic]
                                        $.gen.listSuccessRates2.push(successRate)
                                    }else{
                                       
                                        $.gen.dicOverviewStatistics2[successRate].push(dic)
                                        
                                        
                                    }




last = allObj[len(allObj)-1]
            #month = str(a.date.month)
            yearMonth = str(last.date)[:7]
            #if len(month) == 1:
            #    month = '0'+month
            #yearMonth = str(a.date.year)+'-'+month
            #print(yearMonth)
            a = CPCs.objects.filter(idCampaign=campaignObj,date__startswith=yearMonth)




last = allObj[len(allObj)-1]
            #month = str(a.date.month)
            yearMonth = str(last.date)[:7]
            #if len(month) == 1:
            #    month = '0'+month
            #yearMonth = str(a.date.year)+'-'+month
            #print(yearMonth)
            a = CPCs.objects.filter(idCampaign=campaignObj,date__startswith=yearMonth)





$.fn.insertWordsPeriods = function(wordsPeriods){
                $('#selectYear1 option').remove()
                $('#selectMonth1 option').remove()
                $.gen.wordsPeriods = wordsPeriods
                L = []
                for (var key in $.gen.wordsPeriods) {
                    if ($.gen.wordsPeriods.hasOwnProperty(key)) {
                        L.push(key)
                        $.gen.wordsPeriods[key] = $.gen.wordsPeriods[key].sort(function (a, b) { return a - b;}).reverse()
                    }
                }
                

                
                var L = L.sort(function (a, b) { return a - b;}).reverse()
                var k = 0
                var str = []
                for (var i = 0,len=L.length;i<len;i++){
                    if (i == 0){
                        var currentYear = key
                    }
                    str[k++] = '<option class="optionKeyword" value="'+L[i]+'" style="" >'+L[i]+'</option>'
                    if (i == 0){
                        $('#selectYear11').append(str.join(''))
                    }
                    
                
                }
                $('#selectYear1').append(str)
                //$('#selectYear11').append(str)
                //var L = data.cpcsPeriods[currentYear].sort(function (a, b) { return a - b;}).reverse()
                var k = 0
                var str = []
                
                for (var i = 0,len=$.gen.wordsPeriods[currentYear].length;i<len;i++){
                    str[k++] = '<option class="optionKeyword" value="'+$.gen.wordsPeriods[currentYear][i]+'" style="" >'+$.gen.wordsPeriods[currentYear][i]+'</option>'
                    if (i == 0){
                        $('#selectMonth11').append(str.join(''))
                    }
                    
                }
                $('#selectMonth1').append(str)



$('select[class="selectYearMonth"]').on('change',function(){
                        
                        
                        $('#yearMonthInput').attr('value',$.cookie('csrftoken'))
                        
                        var year = $('#selectYear option:selected').val()
                        //console.log(value)
                        $('#year').attr('value',year)
                        var month = $('#selectMonth option:selected').val()
                        console.log(month)
                        $('#month').attr('value',month)
                        $('#yearMonthIdCampaign').attr('value',$.gen.campaignIdCampaign)
                        var frm = $('#yearMonthForm')
                        
                        
                        
                        
                        
                    
                        $.ajax({
                            type: frm.attr('method'),
                            url: frm.attr('action'),
                            data: frm.serialize(),
                            cache: false,
                            beforeSend: function(){
                                
                                
                                
                            
                            },
                                     
                            success: function (msg) {
                                alert(msg)
                               
                             
                                var data = $.parseJSON(msg);
                                
                                
                                
                                
                                $.fn.buildCPCSet(data)
                                
                                /*
                                
                                $.gen.defaultList2 = []
                                $.gen.listSuccessRates2 = []
                                $.gen.dicOverviewStatistics2 = {}
                                
                                
                                
                                for (var i = 0,len=data.length;i<len;i++){
                                    
                                    var successRate = $.fn.buildCPCRecord(data[i].date,data[i].avgCPC,data[i].uniqueCountOfClicksSum,data[i].uniqueCountOfViewsSum)
                                    
                                    var dic = {'date':data[i].date,'avgCPC':data[i].avgCPC,'uniqueSumOfViews':data[i].uniqueCountOfViewsSum,'uniqueSumOfClicks':data[i].uniqueCountOfClicksSum}
                                    $.gen.defaultList2.push(dic)
                                    if (!(successRate in $.gen.dicOverviewStatistics2)){
                                        
                                        $.gen.dicOverviewStatistics2[successRate] = [dic]
                                        $.gen.listSuccessRates2.push(successRate)
                                    }else{
                                       
                                        $.gen.dicOverviewStatistics2[successRate].push(dic)
                                        
                                        
                                    }
                                    
                                    
                                    
                                    
                                    
                                    
                                }
                                */
                                
                                
                                
                                
                                //$.fn.buildStatistics(data) 
                                
                            },
                            error: function (msg) {
                            },
                        })
                        
                        
                        
                        
                        //$(this).prop("selected",false)
                        //$('option[class="optionKeyword"]').not(this).prop('selected',false)
                    })




$('#selectYear1').on('change',function(){
                        var value = $(this).val()
                        if (flag == 1){
                            var add1 = '1'
                            var add2 = '11'
                            var L = $.gen.wordsPeriods[value]
                        }else{
                            var add1 = ''
                            var add2 = '2'
                            var L = $.gen.cpcsPeriods[value]
                        }
                    
                        
                        
                        $('#selectMonth1 option').remove()
                        $('#selectMonth11 option').remove()
                        //var lastYear = $('#selectYear11 option:selected').val()
                        $('#selectYear11 option').remove()
                        
                        var k = 0
                        var str = []
                        for (var i = 0,len=$.gen.years.length;i<len;i++){
                        
                            //if ($.gen.cpcsPeriods.hasOwnProperty(key)) {
                                        
                                str[k++] = '<option class="optionKeyword" value="'+$.gen.years[i]+'" style="" >'+$.gen.years[i]+'</option>'

                                if ($.gen.years[i] == value){
                                    alert('breaked')
                                    break
                                }
                            //}
                        }
                        $('#selectYear11').append(str.join(''))
                        //$('#selectYear11 option[value="'+lastYear+'"]').prop('selected',true)
                        
                        var flag = 0
                        var k = 0
                        var str = []
                        for (var i = 0,len=L.length;i<len;i++){
                            str[k++] = '<option class="optionKeyword" value="'+L[value][i]+'" style="" >'+L[value][i]+'</option>'
                            
                            if (value == $.gen.years[0] ){ 
                            
                            
                            
                                if (i == 0){
                                    $('#selectMonth11').append(str.join(''))
                                }
                            }
                            if (value != $.gen.years[0] ){
                                flag = 1 
                            }
                        }
                        $('#selectMonth1').append(str.join(''))
                        
                        //var sel = $('#selectMonth11 option:selected').val()
                        //alert('sel')
                        //alert(sel)
                        
                        if (flag == 1){
                        
                            var k = 0
                            var str = []
                            if (flag == 1){
                                for (var i = 0,len=data[$.gen.years[0]].length;i<len;i++){
                                    str[k++] = '<option class="optionKeyword" value="'+ data[$.gen.years[0]][i]+'" style="" >'+data[$.gen.years[0]][i]+'</option>'
                                }
                            }
                            $('#selectMonth11').append(str.join(''))
                        }
                        
                        
                        
                    })



 b = i.uniqueCountOfClicks
                    if str(unicode(i.date)[:7]) not in dicko.keys():
                        dicko[str(unicode(i.date)[:7])] = {}
                    #else:
                    dickey = {'views':i.uniqueCountOfViews,'clicks':b}
                    dicko[str(unicode(i.date)[:7])][str(unicode(i.date)[8:10])] = dickey
                    '''



                $('select[class="selectSuccessRate1"]').on('change',function(){
                    $('#optionSuccessRate1 option').not(this).prop('selected',false)
                    $(this).prop('selected',true)
                    var value = $(this).val()
                    $('#statistics > tbody > tr').remove()
                    var flag = 0
                    if (value == '3'){
                        var L = $.gen.listSuccessRates1.sort(function (a, b) { return a - b;});
                        flag = 1
                        //alert('a')
                        
                    }
                    if (value == '2'){
                        var L = $.gen.listSuccessRates1.sort(function (a, b) { return a - b;}).reverse()
                        flag = 1
                        //alert('b')
                        
                        
                    }
                    /*
                    if (data[i].views != 0){
                        var successRate = ((data[i].clicks/data[i].views) * 100).toFixed(2)
                        var valo = successRate
                        //addon[n++] = successRate.toFixed(2);
                    }else{
                        var successRate = 0
                        var valo = '-'
                        //addon[n++] = '-'
                    }
                    */
                    
                    var m = 0
                    
                    //console.log(L)
                    //console.log($.gen.listSuccessRates1)
                    if (flag == 1){
                        for (var i = 0,len=L.length;i<len;i++){
                   
                                for (var key in $.gen.dicOverviewStatistics1){
                                    
                                    if ($.gen.dicOverviewStatistics1.hasOwnProperty(key)){
                                        if (L[i] == key){
                                            
                                            for (var k = 0, leno = $.gen.dicOverviewStatistics1[key].length;k<leno;k++){
                                                if (m < 15){
                                                    if ($.gen.dicOverviewStatistics1[key][k].views != 0){
                                                        var valo = L[i]
                                                    }else{
                                                        var valo = '-'
                                                    }
                                                    
                                                
                                                 
                                                    $.fn.buildStatisticsRecord($.gen.dicOverviewStatistics1[key][k].date,$.gen.dicOverviewStatistics1[key][k].views,$.gen.dicOverviewStatistics1[key][k].clicks,valo)
                                                    m++;
                                                }
                                            }
                                            
                                        }
                                    }
                                    
                                
                                }
                            
                                
                        }
                    }else{
                        for (var i = 0,len=$.gen.defaultList1.length;i<len;i++){
                            if (m < 15){
                                if ($.gen.defaultList1[i].views != 0){
                                    var valo = $.gen.defaultList1[i].succRate
                                }else{
                                    var valo = '-'
                                }
                            
                                $.fn.buildStatisticsRecord($.gen.defaultList1[i].date,$.gen.defaultList1[i].views,$.gen.defaultList1[i].clicks,valo)
                                m++;
                            }
                        }
                    }
                    
                    
                    
                    

                })
                
                
                
                
                
                            $.fn.buildStatistics = function(data){
            
                $('#statistics tbody > tr').remove()
                $.gen.defaultList1 = []
                $.gen.listSuccessRates1 = []
                $.gen.dicOverviewStatistics1 = {}
                
                //L = []
                
                for (var i =0,len=data.length;i<len;i++){
                
                    if (data[i].views != 0){
                        var successRate = ((data[i].clicks/data[i].views) * 100).toFixed(2)
                        var valo = successRate
                        //addon[n++] = successRate.toFixed(2);
                    }else{
                        var successRate = 0
                        var valo = '-'
                        //addon[n++] = '-'
                    }
                    //L.push(data[i].date)        
                    if (i < 15){        
                        $.fn.buildStatisticsRecord( data[i].date,data[i].views,data[i].clicks,valo)
                    }
                    var dic = {'date':data[i].date,'clicks':data[i].clicks,'views':data[i].views,'succRate':valo}
                    $.gen.defaultList1.push(dic)
                    if (!(successRate in $.gen.dicOverviewStatistics1)){
                                    
                        $.gen.dicOverviewStatistics1[successRate] = [dic]
                        $.gen.listSuccessRates1.push(successRate)
                    }else{
                       
                        $.gen.dicOverviewStatistics1[successRate].push(dic)
                        
                        
                    }
                            
                            
                            
                            
                    //console.log('L',L)        

                }
                
                
                
                
                
                
                
                
                
                                    $('select[class="selectSuccessRate1"]').on('change',function(){
                        $.fn.getStatistics();
                    })
                    
                    
                    
                    $('div[class="statisticsNavigationDiv"]').click(function(){
                        var value=$(this).attr('value')
                        if (value == '1' && $.gen.curStatistics == 1){
                            console.log('a')
                            return
                        }
                        if (value == '2' && $.gen.curStatistics == $.gen.extentStatistics){
                            console.log('b')
                            return
                        }
                        
                        if (value == '1'){
                            $.gen.curStatistics = $.gen.curStatistics - 1
                            $.gen.fromStat = $.gen.fromStat - 15
                            var valo = $('#statistics > tbody> tr').length
                            $.gen.toStat = $.gen.toStat - valo 
                            
                            
                            
                        }else{
                            
                            $.gen.curStatistics = $.gen.curStatistics + 1
                            $.gen.fromStat = $.gen.fromStat + 15
                            console.log('coo',$.gen.fromStat)
                            if (($.gen.toStat + 15) > $.gen.sumStat){
                                $.gen.toStat = $.gen.sumStat
                            }else{
                                $.gen.toStat = $.gen.toStat + 15
                            }

                        }
                        $('#sumSoFar').text($.gen.fromStat)
                        $('#sumSoFar1').text($.gen.toStat)
                        
                        
                        
                        //$.fn.countNavigation1(1)
                        $.fn.getStatistics()
                        //$.fn.getStatistics($.gen.fromStat-1,$.gen.toStat)
                        $.fn.checkPagesNavigators(2)
                        
                        
                        
                        
                    })
                    
                    
                    
                    $('div[class="statisticsNavigationDiv"]').hover(function(){

                        var value=$(this).attr('value')
                        
                        if (value == '1' && $.gen.curStatistics ==1){
                            return
                        }  
                        if (value == '2' && $.gen.curStatistics == $.gen.extentStatistics ){
                            return
                        }
                        
                        
                        if (value == '1'){
                            var selector = $('#leftArrowImgStatistics')
                        }else{
                            var selector = $('#rightArrowImgStatistics')
                        }
                        
                        
                        $(this).css ('background-image', '-webkit-linear-gradient(top,#f8f8f8,#f1f1f1)').css('border','1px solid #c6c6c6').css('color','#333')
                        selector.css('opacity','0.9')
                    //}
                    },function(){
                    
                    //if ($.gen.curGroup != $.gen.numOfGroups - 1){
                        
                        var value=$(this).attr('value')
                        
                        if (value == '1' && $.gen.curStatistics == 1 ){
                            return
                        }  
                        if (value == '2' && $.gen.curStatistics == $.gen.extentStatistics ){
                            return
                        }
                        
                        if (value == '1'){
                            var selector = $('#leftArrowImgStatistics')
                        }else{
                            var selector = $('#rightArrowImgStatistics')
                        }
                        $(this).css ('background-image', '-webkit-linear-gradient(top,#f5f5f5,#f1f1f1)').css('border','1px solid rgba(0,0,0,0.1)').css('color','#444')
                        
                        
                        selector.css('opacity','0.55')
                    //}
                    })
                    
                                $.fn.getStatistics = function(){
                
                var from = $.gen.fromStat - 1
                var to = $.gen.toStat
                $('#statistics tbody > tr').remove()
                console.log('from',from,'to',to)
                var a = parseInt($('#selectSuccessRate1 option:selected').val())
                console.log('petra',a)
                
                if (a == 3){
                    //var data = $.gen.dicOverviewStatistics1
                    var L = $.gen.listSuccessRates1.sort(function (a, b) { return a - b;});
                    console.log('first')
                }
                
                if (a == 2){
                    //var data = $.gen.dicOverviewStatistics1
                    var L = $.gen.listSuccessRates1.sort(function (a, b) { return a - b;}).reverse();
                }
                    console.log('first')
                if (a == 1){
                    //var data = $.gen.defaultList1
                    //var L = $.gen.defaultList1
                    console.log('second')
                }
                var m = 0
                
                if (a == 1){
                    for (var i = 0,len=$.gen.defaultList1.length;i<len;i++){
                        
                        if (m >= from && m < to  ){
                            if ($.gen.defaultList1[i].views != 0){
                                var valo = $.gen.defaultList1[i].succRate
                            }else{
                                var valo = '-'
                            }
                        
                            $.fn.buildStatisticsRecord($.gen.defaultList1[i].date,$.gen.defaultList1[i].views,$.gen.defaultList1[i].clicks,valo)
                            
                        }
                        m = m + 1;
                        
                    
                    
                    
                    }
                }else{

                    for (var i = 0,len=L.length;i<len;i++){

                       
                            for (var key in $.gen.dicOverviewStatistics1){
                                
                                if ($.gen.dicOverviewStatistics1.hasOwnProperty(key)){

                                    if (L[i] == key){
                                        
                                        for (var k = 0, leno = $.gen.dicOverviewStatistics1[key].length;k<leno;k++){
                                            //if (m < 15){
                                            if (m >= from && m < to){
                                                if ($.gen.dicOverviewStatistics1[key][k].views != 0){
                                                    var valo = L[i]
                                                }else{
                                                    var valo = '-'
                                                }
                                                
                                            
                                             
                                                $.fn.buildStatisticsRecord($.gen.dicOverviewStatistics1[key][k].date,$.gen.dicOverviewStatistics1[key][k].views,$.gen.dicOverviewStatistics1[key][k].clicks,valo)
                                                
                                            }
                                            m = m + 1;
                                            
                                        }
                                        
                                    }
                                }
                                
                            
                            }
                        
                            
                    }
                
                
                
                }
                
               console.log('aaawdad',m)
                
                
                
            
            }






















$.fn.getStatistics = function(){
                
                var from = $.gen.fromStat - 1
                var to = $.gen.toStat
                $('#statistics tbody > tr').remove()
                console.log('from',from,'to',to)
                var a = parseInt($('#selectSuccessRate1 option:selected').val())
                console.log('petra',a)
                
                if (a == 3){
                    //var data = $.gen.dicOverviewStatistics1
                    var L = $.gen.listSuccessRates1.sort(function (a, b) { return a - b;});
                    console.log('first')
                }
                
                if (a == 2){
                    //var data = $.gen.dicOverviewStatistics1
                    var L = $.gen.listSuccessRates1.sort(function (a, b) { return a - b;}).reverse();
                }
                    console.log('first')
                if (a == 1){
                    //var data = $.gen.defaultList1
                    //var L = $.gen.defaultList1
                    console.log('second')
                }
                var m = 0
                
                if (a == 1){
                    for (var i = 0,len=$.gen.defaultList1.length;i<len;i++){
                        
                        if (m >= from && m < to  ){
                            if ($.gen.defaultList1[i].views != 0){
                                var valo = $.gen.defaultList1[i].succRate
                            }else{
                                var valo = '-'
                            }
                        
                            $.fn.buildStatisticsRecord($.gen.defaultList1[i].date,$.gen.defaultList1[i].views,$.gen.defaultList1[i].clicks,valo)
                            
                        }
                        m = m + 1;
                        
                    
                    
                    
                    }
                }else{

                    for (var i = 0,len=L.length;i<len;i++){

                       
                            for (var key in $.gen.dicOverviewStatistics1){
                                
                                if ($.gen.dicOverviewStatistics1.hasOwnProperty(key)){

                                    if (L[i] == key){
                                        
                                        for (var k = 0, leno = $.gen.dicOverviewStatistics1[key].length;k<leno;k++){
                                            //if (m < 15){
                                            if (m >= from && m < to){
                                                if ($.gen.dicOverviewStatistics1[key][k].views != 0){
                                                    var valo = L[i]
                                                }else{
                                                    var valo = '-'
                                                }
                                                
                                            
                                             
                                                $.fn.buildStatisticsRecord($.gen.dicOverviewStatistics1[key][k].date,$.gen.dicOverviewStatistics1[key][k].views,$.gen.dicOverviewStatistics1[key][k].clicks,valo)
                                                
                                            }
                                            m = m + 1;
                                            
                                        }
                                        
                                    }
                                }
                                
                            
                            }
                        
                            
                    }
                
                
                
                }
                
               console.log('aaawdad',m)
                
                
                
            
            }










                            var data = $.parseJSON(msg);
                            if (data.status == 1){
                                $('#noCampaigns').hide()
                                $('#campaignsList').show()
                                
                                var dic = {'idCampaign':data.idCampaign,'name':data.name,'status':1,'successRate':'-','timePeriod':'-'}
                                $.gen.campaignsList.unshift(dic)
                                $.fn.resetCamp($.gen.campaignsList.length)
                                $.fn.getCamp()
                                
                                $.fn.addCampaignHandlers(data.idCampaign,data.name,1)
                                
                                $.fn.addActionButtonHadler() 
                                $('#succesfulCampaignCreation').fadeIn()
                                setTimeout(function(){ $('#succesfulCampaignCreation').fadeOut() }, 5000)
                                $('#returnFromCampaignCreation').click(function(){
                                    $.fn.returnToCampaignList(1)
                                })
                                
                                $.fn.checkNavigationPanelVisibility($.gen.campaignsList.length,'3','','Camp')
                                $.fn.checkPagesNavigators(1)
                                
                                
                                
                                                                        if (data.old.length > 0){
                                        
                                            for (var i = 0,len = data.old.length;i<len;i++){
                                            
                                                $('#keyword_'+data.old[i]+'').remove()
                                                
                                                $.fn.deleteFromDefaultList(data.old[i])
                                                
                                                $("#option_"+data.old[i]+"").remove()
                                                
                                                
                                            }
                                            flag = 1
                                            var len = $.gen.defaultList.length 
                                        }



            $.fn.addNavigationDivHandler = function(num){
                
                var names=['camp']

                $('div[class="'+names[num]+'NavigationDiv"]').click(function(){
                    
                
                    var dic = {0:{'sumSoFarFrom':6,'sumSoFarTo':7}}
                    var curs = [$.gen.curCamp]
                    var extents = [$.gen.extentCamp]
                    var froms = [$.gen.fromCamp]
                    var tos = [$.gen.toCamp]
                    
                   
                    var amounts = [5]
                    var sums = [$.gen.sumCamp]
                    var funcs = [$.fn.getCamp]
                    var pagesNavigators = [1]
                    var tables = ['campaigns']
                    console.log('froms0',$.gen.fromCamp,'tos0',$.gen.toCamp)  
                    console.log('F',curs[num],'T',tos[num])
                    var value=$(this).attr('value')
                    if (value == '1' && curs[num] == 1){
                        console.log('a')
                        return
                    }
                    if (value == '2' && curs[num] == extents[num]){
                        console.log('b')
                        return
                    }
                    
                    if (value == '1'){
                        console.log('A',curs[num])
                        curs[num] = curs[num] - 1
                        console.log('A1',curs[num])
                        froms[num] = froms[num] - 5
                        var valo = $('#'+tables[num]+' > tbody> tr').length
                        tos[num] = tos[num] - valo 
                        
                        
                        
                    }else{
                        console.log('B',curs[num])
                        curs[num] = curs[num] + 1
                        froms[num] = froms[num] + amounts[num]
                        console.log('B1',curs[num])
                        console.log('coo',froms[num])
                        if ((tos[num] + 5) > sums[num]){
                            tos[num] = sums[num]
                        }else{
                            tos[num] = tos[num] + amounts[num]
                        }

                    }
                    console.log('froms',$.gen.fromCamp,'tos',$.gen.toCamp)
                    $('#sumSoFar'+dic[num]['sumSoFarFrom']+'').text(froms[num])
                    $('#sumSoFar'+dic[num]['sumSoFarTo']+'').text(tos[num])

                    funcs[num]()
                    $.fn.checkPagesNavigators(pagesNavigators[num])
                    //*/
                
                    
                })
            }
            
            
            
            
            
            
            
            
            
            
                        $.fn.getOver = function(){
                
                var from = $.gen.fromOver - 1
                var to = $.gen.toOver
                var value = parseInt($('#selectSuccessRate option:selected').val())
                $('#overviewStatistics > tbody > tr').remove()
                var flag = 0
                if (value == 3){
                    var L = $.gen.listSuccessRates.sort(function (a, b) { return a - b;});
                    flag = 1
                    
                }
                if (value == 2){
                    var L = $.gen.listSuccessRates.sort(function (a, b) { return a - b;}).reverse()
                    flag = 1
                }
                
                var m = 0

                if (flag == 1){
                    for (var i = 0,len=L.length;i<len;i++){
               
                            for (var key in $.gen.dicOverviewStatistics){
                                
                                if ($.gen.dicOverviewStatistics.hasOwnProperty(key)){
                                    if (L[i] == key){
                                        
                                        for (var k = 0, leno = $.gen.dicOverviewStatistics[key].length;k<leno;k++){
                                            if (m >= from && m < to){
                                                if ($.gen.dicOverviewStatistics[key][k].views != 0){
                                                    var valo = L[i]
                                                }else{
                                                    var valo = '-'
                                                }
                                                $.fn.buildOverviewRecord($.gen.dicOverviewStatistics[key][k].idWord,$.gen.dicOverviewStatistics[key][k].name,$.gen.dicOverviewStatistics[key][k].views,$.gen.dicOverviewStatistics[key][k].clicks,valo)
                                            }
                                            m = m + 1;
                                        }
                                        
                                    }
                                }
                                
                            
                            }
                        
                            
                    }
                }else{
                    for (var i = 0,len=$.gen.defaultList.length;i<len;i++){
                        if (m >= from && m < to  ){
                            if ($.gen.defaultList[i].views != 0){
                                var valo = $.gen.defaultList[i].succRate
                            }else{
                                var valo = '-'
                            }
                            $.fn.buildOverviewRecord($.gen.defaultList[i].idWord,$.gen.defaultList[i].name,$.gen.defaultList[i].views,$.gen.defaultList[i].clicks,valo)
                        }
                        m++;
                    }
                }
            }
            
            
            
            
                        $.fn.getCPCSet = function(){
                var from = $.gen.fromCPCs - 1
                var to = $.gen.toCPCs
                var value = parseInt($('#selectSuccessRate2 option:selected').val())
                $('#cpcTable > tbody > tr').remove()
                var flag = 0
                if (value == 3){
                    var L = $.gen.listSuccessRates2.sort(function (a, b) { return a - b;});
                    flag = 1
                    
                }
                if (value == 2){
                    var L = $.gen.listSuccessRates2.sort(function (a, b) { return a - b;}).reverse()
                    flag = 1
                    
                }
                var m = 0

                if (flag == 1){
                    for (var i = 0,len=L.length;i<len;i++){
               
                            for (var key in $.gen.dicOverviewStatistics2){
                                
                                if ($.gen.dicOverviewStatistics2.hasOwnProperty(key)){
                                    if (L[i] == key){
                                        
                                        for (var k = 0, leno = $.gen.dicOverviewStatistics2[key].length;k<leno;k++){
                                            if (m >= from && m < to  ){
                                                if ($.gen.dicOverviewStatistics2[key][k].views != 0){
                                                    var valo = L[i]
                                                }else{
                                                    var valo = '-'
                                                }
                                            $.fn.buildCPCRecord($.gen.dicOverviewStatistics2[key][k].date,$.gen.dicOverviewStatistics2[key][k].avgCPC,$.gen.dicOverviewStatistics2[key][k].clicks,$.gen.dicOverviewStatistics2[key][k].views,valo)
                                            }
                                            m++;
                                        }
                                        
                                    }
                                }
                                
                            
                            }
                        
                            
                    }
                }else{
                    for (var i = 0,len=$.gen.defaultList2.length;i<len;i++){
                        if (m >= from && m < to  ){
                            if ($.gen.defaultList2[i].views != 0){
                                var valo = $.gen.defaultList2[i].succRate
                            }else{
                                var valo = '-'
                            }
                            $.fn.buildCPCRecord($.gen.defaultList2[i].date,$.gen.defaultList2[i].avgCPC,$.gen.defaultList2[i].clicks,$.gen.defaultList2[i].views,valo)
                            
                        }
                        m++;
                        
                    }
                }
                
                
                
                

            }
            
            
            
            
            addon[i++] = '<table cellpadding="0" cellspacing="0" border="0" style=";position:relative;">'
                        addon[i++] = '<tr>'
                            addon[i++] = '<td>'
                                
                            addon[i++] = '</td>'
                            addon[i++] = '<td>'
                                addon[i++] = '<div id="adminNavigation">'
                                addon[i++] = '</div>'
                            addon[i++] = '</td>'
                        addon[i++] = '</tr>'
                    addon[i++] = '</table>'






        addon[i++] = '<tr>'
            addon[i++] = '<td>'
                addon[i++] = '<table id="selectKeywordTable" cellpadding="0" cellspacing="0" border="0" style=";position:relative;">'
                    addon[i++] = '<tr>'
                        addon[i++] = '<td id="sel">'
                            addon[i++] = '<select class="selectKeyword" id="selectKeyword">'
                            addon[i++] = '<select>'
                        addon[i++] = '</td>'
                    addon[i++] = '<tr>'
                addon[i++] = '</table>'
            addon[i++] = '</td>'
            addon[i++] = '<td>'
                addon[i++] = $.fn.buildNavigationPanel(3)
            addon[i++] = '</td>'
        addon[i++] = '</tr>'
        
        
        
        
            addon[i++] = '<table id="selectKeywordTable" cellpadding="0" cellspacing="0" border="0" style=";position:relative;">'
        addon[i++] = '<tr>'

            addon[i++] = '<td id="sel">'
                addon[i++] = '<select class="selectKeyword" id="selectKeyword">'
                addon[i++] = '<select>'
            addon[i++] = '</td>'

            addon[i++] = '<td id="statNavigationPanelTd">'
                addon[i++] = $.fn.buildNavigationPanel(3)
            addon[i++] = '</td>'
        addon[i++] = '</tr>'
    addon[i++] = '</table>'
    addon[i++] = '<div id="noStat" style="position:absolute;top:60px;display:none">'
        addon[i++] = 'Pre dané kľúčové slovo nie sú k dispozícii žiadne štatistiky'
    addon[i++] = '</div>'
    addon[i++] = '<div id="isStat" style="margin-top:10px;">'
    
    
    
    
    
    
    
    
    
                        $('#selectKeywordTable').not($('#statNavigationPanelTd')).show()
                    
                    var data = $.parseJSON(msg);
                    $.fn.resetStat(data.statistics.length)
                    $.fn.buildStatSet(data.statistics)
                    $.fn.insertPeriods(1,data.wordsPeriodsExtent)
                }else{
                    $('#isStat').hide()
                    $('#noStat').show()
                    $('#selectKeywordTable').not($('#sel')).hide()
    
    
    
    
    
    
            $.fn.buildBills = function(data,flag){
            var i = 0
            var addon = []
            addon[i++] = '<table id="billsTable" cellpadding="0" cellspacing="0" border="0" style=";position:relative;border: 0px double #ddd;">'
                addon[i++] = '<thead>'
                    addon[i++] = '<tr>'
                        if (flag == 0){
                            var fields = ['Číslo faktúry','Stav','Obdobie','Suma']
                        }else{
                            var fields = ['ID','Status','Period','Sum']
                        }
                        var k = 0
                        var str = []
                        for(var m = 0,len = fields.length;m<len;m++){
                            str[k++] = '<th class="addWord">'
                                str[k++] = '<div>'
                                    str[k++] = fields[m]
                                str[k++] = '</div>'
                            str[k++] = '</th>'
                        }
                        addon[i++] = str.join('')
                    addon[i++] = '</tr>'
                addon[i++] = '</thead>'
                addon[i++] = '<tbody>'
                
                for(var m = 0,len = data.length;m<len;m++){
                    /*
                
                    var k = 0
                    var str = []
                    str[k++] = '<tr>'
                            
                        str[k++] = '<td class="addWord" style="width:70px;text-align:center">'
                            str[k++] = '<div>'
                                str[k++] = data[m].id
                            str[k++] = '</div>'
                        str[k++] = '</td class="addWord">'
                        
                        
                        if (data[m].status == 1){
                            if (flag == 0){
                                status = 'Uhradená'
                            }else{
                                status = 'Paid'
                            }
                            var color = 'A9F5A9'
                        }else{
                            if (flag == 0){
                                status = 'Neuhradená'
                            }else{
                                status = 'Unpaid'
                            }
                            //var color = '#D8D8D8'
                            var color = '#F7BE81'
                        }
                        
                        
                        str[k++] = '<td class="addWord" style="background-color:'+color+';width:100px;text-align:center">'
                            str[k++] = '<div>'
                                str[k++] = status
                            str[k++] = '</div>'
                        str[k++] = '</td class="addWord">'
                        str[k++] = '<td class="addWord" style="width:100px;text-align:center">'
                            str[k++] = '<div>'
                                str[k++] = data[m].period
                            str[k++] = '</div>'
                        str[k++] = '</td class="addWord">'
                        str[k++] = '<td class="addWord" style="width:60px;text-align:center">'
                            str[k++] = '<div>'
                                str[k++] = data[m].totalCost
                            str[k++] = '</div>'
                        str[k++] = '</td class="addWord">'
                            
                        
                    str[k++] = '</tr>'
                    */
                    addon[i++] = $.fn.buildBillsRow(data[m].id,data[m].status,data[m].period,data[m].totalCost)
                }
                addon[i++] = '</tbody>'
                
                
        
        
        
            $('#menuBills').children().remove()
            $('#menuBills').append(addon.join(''))
        }

